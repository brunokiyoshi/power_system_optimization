
Gurobi 9.5.1 (win64) logging started Thu Apr  7 00:50:53 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x30c766dc
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 01:06:53 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 60 rows, 105 columns and 315 nonzeros
Model fingerprint: 0xfcc71314
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 0.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 1: 0 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%

Gurobi 9.5.1 (win64) logging started Thu Apr  7 01:25:34 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 60 rows, 105 columns and 315 nonzeros
Model fingerprint: 0xfcc71314
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 1e+00]
Found heuristic solution: objective 0.0000000

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 1: 0 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%

Gurobi 9.5.1 (win64) logging started Thu Apr  7 01:26:55 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R62: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 63 rows, 105 columns and 324 nonzeros
Model fingerprint: 0xdbe9f177
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 34 rows and 65 columns
Presolve time: 0.00s
Presolved: 29 rows, 40 columns, 128 nonzeros
Variable types: 24 continuous, 16 integer (16 binary)
Found heuristic solution: objective 0.0349066

Root relaxation: objective 0.000000e+00, 1 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0       0.0000000    0.00000  0.00%     -    0s

Explored 1 nodes (1 simplex iterations) in 0.03 seconds (0.00 work units)
Thread count was 4 (of 4 available processors)

Solution count 2: 0 0.0349066 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%

Gurobi 9.5.1 (win64) logging started Thu Apr  7 02:18:04 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  0 <= Pgi[2] <= 5
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x32fff0df
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 02:19:16 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7999
  0 <= Pgi[2] <= 9990
  0 <= Pgi[3] <= 9994
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0xc1f14e44
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+04]
  RHS range        [1e+00, 5e+00]
Presolve removed 37 rows and 65 columns
Presolve time: 0.00s
Presolved: 29 rows, 40 columns, 128 nonzeros
Variable types: 24 continuous, 16 integer (16 binary)
Found heuristic solution: objective 0.0349066

Root relaxation: objective 0.000000e+00, 1 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0       0.0000000    0.00000  0.00%     -    0s

Explored 1 nodes (1 simplex iterations) in 0.04 seconds (0.00 work units)
Thread count was 4 (of 4 available processors)

Solution count 2: 0 0.0349066 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%

Gurobi 9.5.1 (win64) logging started Thu Apr  7 10:15:17 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7999
  0 <= Pgi[2] <= 9990
  0 <= Pgi[3] <= 9994
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0xc1f14e44
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 1e+04]
  RHS range        [1e+00, 5e+00]
Presolve removed 37 rows and 65 columns
Presolve time: 0.00s
Presolved: 29 rows, 40 columns, 128 nonzeros
Variable types: 24 continuous, 16 integer (16 binary)
Found heuristic solution: objective 0.0349066

Root relaxation: objective 0.000000e+00, 1 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0       0.0000000    0.00000  0.00%     -    0s

Explored 1 nodes (1 simplex iterations) in 0.04 seconds (0.00 work units)
Thread count was 4 (of 4 available processors)

Solution count 2: 0 0.0349066 

Optimal solution found (tolerance 1.00e-04)
Best objective 0.000000000000e+00, best bound 0.000000000000e+00, gap 0.0000%

Gurobi 9.5.1 (win64) logging started Thu Apr  7 10:15:59 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x30c766dc
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 12:27:06 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14] + lambdas(1, 2)[15] +
lambdas(1, 2)[16] + lambdas(1, 2)[17] + lambdas(1, 2)[18] + lambdas(1, 2)[19] +
lambdas(1, 2)[20] + lambdas(1, 2)[21] + lambdas(1, 2)[22] + lambdas(1, 2)[23] +
lambdas(1, 2)[24] + lambdas(1, 2)[25] + lambdas(1, 2)[26] + lambdas(1, 2)[27] +
lambdas(1, 2)[28] + lambdas(1, 2)[29] + lambdas(1, 2)[30] + lambdas(1, 2)[31] +
lambdas(1, 2)[32] + lambdas(1, 2)[33] + lambdas(1, 2)[34] + lambdas(1, 2)[35] +
lambdas(1, 2)[36] + lambdas(1, 2)[37] + lambdas(1, 2)[38] + lambdas(1, 2)[39] +
lambdas(1, 2)[40] + lambdas(1, 2)[41] + lambdas(1, 2)[42] + lambdas(1, 2)[43] +
 lambdas(1, 2)[44]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
2)[12] + z(1, 2)[13] + z(1, 2)[14] + z(1, 2)[15] + z(1, 2)[16] + z(1, 2)[17] + z(1,
2)[18] + z(1, 2)[19] + z(1, 2)[20] + z(1, 2)[21] + z(1, 2)[22] + z(1, 2)[23] + z(1,
2)[24] + z(1, 2)[25] + z(1, 2)[26] + z(1, 2)[27] + z(1, 2)[28] + z(1, 2)[29] + z(1,
2)[30] + z(1, 2)[31] + z(1, 2)[32] + z(1, 2)[33] + z(1, 2)[34] + z(1, 2)[35] + z(1,
2)[36] + z(1, 2)[37] + z(1, 2)[38] + z(1, 2)[39] + z(1, 2)[40] + z(1, 2)[41] + z(1,
 2)[42] + z(1, 2)[43] + z(1, 2)[44]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[44] + -1.0 z(1, 2)[44]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
  R17: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14] + -1.0 z(1, 2)[15]> <= 0
  R18: <gurobi.LinExpr: lambdas(1, 2)[15] + -1.0 z(1, 2)[15] + -1.0 z(1, 2)[16]> <= 0
  R19: <gurobi.LinExpr: lambdas(1, 2)[16] + -1.0 z(1, 2)[16] + -1.0 z(1, 2)[17]> <= 0
  R20: <gurobi.LinExpr: lambdas(1, 2)[17] + -1.0 z(1, 2)[17] + -1.0 z(1, 2)[18]> <= 0
  R21: <gurobi.LinExpr: lambdas(1, 2)[18] + -1.0 z(1, 2)[18] + -1.0 z(1, 2)[19]> <= 0
  R22: <gurobi.LinExpr: lambdas(1, 2)[19] + -1.0 z(1, 2)[19] + -1.0 z(1, 2)[20]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 2)[20] + -1.0 z(1, 2)[20] + -1.0 z(1, 2)[21]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 2)[21] + -1.0 z(1, 2)[21] + -1.0 z(1, 2)[22]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 2)[22] + -1.0 z(1, 2)[22] + -1.0 z(1, 2)[23]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 2)[23] + -1.0 z(1, 2)[23] + -1.0 z(1, 2)[24]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 2)[24] + -1.0 z(1, 2)[24] + -1.0 z(1, 2)[25]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 2)[25] + -1.0 z(1, 2)[25] + -1.0 z(1, 2)[26]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 2)[26] + -1.0 z(1, 2)[26] + -1.0 z(1, 2)[27]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 2)[27] + -1.0 z(1, 2)[27] + -1.0 z(1, 2)[28]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 2)[28] + -1.0 z(1, 2)[28] + -1.0 z(1, 2)[29]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 2)[29] + -1.0 z(1, 2)[29] + -1.0 z(1, 2)[30]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 2)[30] + -1.0 z(1, 2)[30] + -1.0 z(1, 2)[31]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 2)[31] + -1.0 z(1, 2)[31] + -1.0 z(1, 2)[32]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 2)[32] + -1.0 z(1, 2)[32] + -1.0 z(1, 2)[33]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 2)[33] + -1.0 z(1, 2)[33] + -1.0 z(1, 2)[34]> <= 0
  R37: <gurobi.LinExpr: lambdas(1, 2)[34] + -1.0 z(1, 2)[34] + -1.0 z(1, 2)[35]> <= 0
  R38: <gurobi.LinExpr: lambdas(1, 2)[35] + -1.0 z(1, 2)[35] + -1.0 z(1, 2)[36]> <= 0
  R39: <gurobi.LinExpr: lambdas(1, 2)[36] + -1.0 z(1, 2)[36] + -1.0 z(1, 2)[37]> <= 0
  R40: <gurobi.LinExpr: lambdas(1, 2)[37] + -1.0 z(1, 2)[37] + -1.0 z(1, 2)[38]> <= 0
  R41: <gurobi.LinExpr: lambdas(1, 2)[38] + -1.0 z(1, 2)[38] + -1.0 z(1, 2)[39]> <= 0
  R42: <gurobi.LinExpr: lambdas(1, 2)[39] + -1.0 z(1, 2)[39] + -1.0 z(1, 2)[40]> <= 0
  R43: <gurobi.LinExpr: lambdas(1, 2)[40] + -1.0 z(1, 2)[40] + -1.0 z(1, 2)[41]> <= 0
  R44: <gurobi.LinExpr: lambdas(1, 2)[41] + -1.0 z(1, 2)[41] + -1.0 z(1, 2)[42]> <= 0
  R45: <gurobi.LinExpr: lambdas(1, 2)[42] + -1.0 z(1, 2)[42] + -1.0 z(1, 2)[43]> <= 0
  R46: <gurobi.LinExpr: lambdas(1, 2)[43] + -1.0 z(1, 2)[43] + -1.0 z(1, 2)[44]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.99879298751753 lambdas(1, 2)[1] + 2.8559933214452666 lambdas(1, 2)[2] +
2.7131936553730034 lambdas(1, 2)[3] + 2.5703939893007397 lambdas(1, 2)[4] +
2.4275943232284765 lambdas(1, 2)[5] + 2.284794657156213 lambdas(1, 2)[6] +
2.14199499108395 lambdas(1, 2)[7] + 1.9991953250116865 lambdas(1, 2)[8] +
1.8563956589394233 lambdas(1, 2)[9] + 1.7135959928671598 lambdas(1, 2)[10] +
1.5707963267948966 lambdas(1, 2)[11] + 1.4279966607226333 lambdas(1, 2)[12] +
1.2851969946503699 lambdas(1, 2)[13] + 1.1423973285781066 lambdas(1, 2)[14] +
0.9995976625058431 lambdas(1, 2)[15] + 0.8567979964335799 lambdas(1, 2)[16] +
0.7139983303613167 lambdas(1, 2)[17] + 0.5711986642890534 lambdas(1, 2)[18] +
0.42839899821678973 lambdas(1, 2)[19] + 0.2855993321445265 lambdas(1, 2)[20] +
0.14279966607226324 lambdas(1, 2)[21] + -0.14279966607226324 lambdas(1, 2)[23] +
-0.2855993321445265 lambdas(1, 2)[24] + -0.42839899821679017 lambdas(1, 2)[25] +
-0.5711986642890534 lambdas(1, 2)[26] + -0.7139983303613167 lambdas(1, 2)[27] +
-0.8567979964335799 lambdas(1, 2)[28] + -0.9995976625058436 lambdas(1, 2)[29] +
-1.1423973285781068 lambdas(1, 2)[30] + -1.28519699465037 lambdas(1, 2)[31] +
-1.4279966607226333 lambdas(1, 2)[32] + -1.5707963267948966 lambdas(1, 2)[33] +
-1.7135959928671598 lambdas(1, 2)[34] + -1.856395658939423 lambdas(1, 2)[35] +
-1.9991953250116863 lambdas(1, 2)[36] + -2.1419949910839495 lambdas(1, 2)[37] +
-2.2847946571562137 lambdas(1, 2)[38] + -2.427594323228477 lambdas(1, 2)[39] +
-2.57039398930074 lambdas(1, 2)[40] + -2.7131936553730034 lambdas(1, 2)[41] +
-2.8559933214452666 lambdas(1, 2)[42] + -2.99879298751753 lambdas(1, 2)[43] +
 -3.141592653589793 lambdas(1, 2)[44] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.6296788453671354 lambdas(1, 2)[1] + -0.652646380157878 lambdas(1, 2)[2] +
-0.6684350515967894 lambdas(1, 2)[3] + -0.6767234478641417 lambdas(1, 2)[4] +
-0.677342841113693 lambdas(1, 2)[5] + -0.6702806222850649 lambdas(1, 2)[6] +
-0.6556805577878508 lambdas(1, 2)[7] + -0.6338398628321051 lambdas(1, 2)[8] +
-0.6052031509837633 lambdas(1, 2)[9] + -0.5703533831146 lambdas(1, 2)[10] + -0.53
lambdas(1, 2)[11] + -0.484964480150629 lambdas(1, 2)[12] + -0.4361636168789055
lambdas(1, 2)[13] + -0.3845908550309733 lambdas(1, 2)[14] + -0.33129606731449235
lambdas(1, 2)[15] + -0.2773641819178939 lambdas(1, 2)[16] + -0.2238930965011381
lambdas(1, 2)[17] + -0.17197132816543315 lambdas(1, 2)[18] + -0.12265585438407828
lambdas(1, 2)[19] + -0.07695059598917953 lambdas(1, 2)[20] + -0.03578598023857571
lambdas(1, 2)[21] + 0.029678845367135387 lambdas(1, 2)[23] + 0.05264638015787804
lambdas(1, 2)[24] + 0.06843505159678942 lambdas(1, 2)[25] + 0.07672344786414176
lambdas(1, 2)[26] + 0.07734284111369305 lambdas(1, 2)[27] + 0.07028062228506499
lambdas(1, 2)[28] + 0.055680557787850915 lambdas(1, 2)[29] + 0.033839862832105105
lambdas(1, 2)[30] + 0.005203150983763283 lambdas(1, 2)[31] + -0.029646616885399935
lambdas(1, 2)[32] + -0.06999999999999995 lambdas(1, 2)[33] + -0.11503551984937094
lambdas(1, 2)[34] + -0.1638363831210944 lambdas(1, 2)[35] + -0.21540914496902655
lambdas(1, 2)[36] + -0.2687039326855074 lambdas(1, 2)[37] + -0.3226358180821062
lambdas(1, 2)[38] + -0.376106903498862 lambdas(1, 2)[39] + -0.42802867183456694
lambdas(1, 2)[40] + -0.47734414561592164 lambdas(1, 2)[41] + -0.5230494040108203
lambdas(1, 2)[42] + -0.5642140197614242 lambdas(1, 2)[43] + -0.5999999999999999
 lambdas(1, 2)[44] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R50: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14] + lambdas(1, 3)[15] +
lambdas(1, 3)[16] + lambdas(1, 3)[17] + lambdas(1, 3)[18] + lambdas(1, 3)[19] +
lambdas(1, 3)[20] + lambdas(1, 3)[21] + lambdas(1, 3)[22] + lambdas(1, 3)[23] +
lambdas(1, 3)[24] + lambdas(1, 3)[25] + lambdas(1, 3)[26] + lambdas(1, 3)[27] +
lambdas(1, 3)[28] + lambdas(1, 3)[29] + lambdas(1, 3)[30] + lambdas(1, 3)[31] +
lambdas(1, 3)[32] + lambdas(1, 3)[33] + lambdas(1, 3)[34] + lambdas(1, 3)[35] +
lambdas(1, 3)[36] + lambdas(1, 3)[37] + lambdas(1, 3)[38] + lambdas(1, 3)[39] +
lambdas(1, 3)[40] + lambdas(1, 3)[41] + lambdas(1, 3)[42] + lambdas(1, 3)[43] +
 lambdas(1, 3)[44]> = 1
R51: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
3)[12] + z(1, 3)[13] + z(1, 3)[14] + z(1, 3)[15] + z(1, 3)[16] + z(1, 3)[17] + z(1,
3)[18] + z(1, 3)[19] + z(1, 3)[20] + z(1, 3)[21] + z(1, 3)[22] + z(1, 3)[23] + z(1,
3)[24] + z(1, 3)[25] + z(1, 3)[26] + z(1, 3)[27] + z(1, 3)[28] + z(1, 3)[29] + z(1,
3)[30] + z(1, 3)[31] + z(1, 3)[32] + z(1, 3)[33] + z(1, 3)[34] + z(1, 3)[35] + z(1,
3)[36] + z(1, 3)[37] + z(1, 3)[38] + z(1, 3)[39] + z(1, 3)[40] + z(1, 3)[41] + z(1,
 3)[42] + z(1, 3)[43] + z(1, 3)[44]> = 1
  R52: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R53: <gurobi.LinExpr: lambdas(1, 3)[44] + -1.0 z(1, 3)[44]> <= 0
  R54: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R55: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R56: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R57: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R58: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R59: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R60: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R61: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R62: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R63: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R64: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R65: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R66: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
  R67: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14] + -1.0 z(1, 3)[15]> <= 0
  R68: <gurobi.LinExpr: lambdas(1, 3)[15] + -1.0 z(1, 3)[15] + -1.0 z(1, 3)[16]> <= 0
  R69: <gurobi.LinExpr: lambdas(1, 3)[16] + -1.0 z(1, 3)[16] + -1.0 z(1, 3)[17]> <= 0
  R70: <gurobi.LinExpr: lambdas(1, 3)[17] + -1.0 z(1, 3)[17] + -1.0 z(1, 3)[18]> <= 0
  R71: <gurobi.LinExpr: lambdas(1, 3)[18] + -1.0 z(1, 3)[18] + -1.0 z(1, 3)[19]> <= 0
  R72: <gurobi.LinExpr: lambdas(1, 3)[19] + -1.0 z(1, 3)[19] + -1.0 z(1, 3)[20]> <= 0
  R73: <gurobi.LinExpr: lambdas(1, 3)[20] + -1.0 z(1, 3)[20] + -1.0 z(1, 3)[21]> <= 0
  R74: <gurobi.LinExpr: lambdas(1, 3)[21] + -1.0 z(1, 3)[21] + -1.0 z(1, 3)[22]> <= 0
  R75: <gurobi.LinExpr: lambdas(1, 3)[22] + -1.0 z(1, 3)[22] + -1.0 z(1, 3)[23]> <= 0
  R76: <gurobi.LinExpr: lambdas(1, 3)[23] + -1.0 z(1, 3)[23] + -1.0 z(1, 3)[24]> <= 0
  R77: <gurobi.LinExpr: lambdas(1, 3)[24] + -1.0 z(1, 3)[24] + -1.0 z(1, 3)[25]> <= 0
  R78: <gurobi.LinExpr: lambdas(1, 3)[25] + -1.0 z(1, 3)[25] + -1.0 z(1, 3)[26]> <= 0
  R79: <gurobi.LinExpr: lambdas(1, 3)[26] + -1.0 z(1, 3)[26] + -1.0 z(1, 3)[27]> <= 0
  R80: <gurobi.LinExpr: lambdas(1, 3)[27] + -1.0 z(1, 3)[27] + -1.0 z(1, 3)[28]> <= 0
  R81: <gurobi.LinExpr: lambdas(1, 3)[28] + -1.0 z(1, 3)[28] + -1.0 z(1, 3)[29]> <= 0
  R82: <gurobi.LinExpr: lambdas(1, 3)[29] + -1.0 z(1, 3)[29] + -1.0 z(1, 3)[30]> <= 0
  R83: <gurobi.LinExpr: lambdas(1, 3)[30] + -1.0 z(1, 3)[30] + -1.0 z(1, 3)[31]> <= 0
  R84: <gurobi.LinExpr: lambdas(1, 3)[31] + -1.0 z(1, 3)[31] + -1.0 z(1, 3)[32]> <= 0
  R85: <gurobi.LinExpr: lambdas(1, 3)[32] + -1.0 z(1, 3)[32] + -1.0 z(1, 3)[33]> <= 0
  R86: <gurobi.LinExpr: lambdas(1, 3)[33] + -1.0 z(1, 3)[33] + -1.0 z(1, 3)[34]> <= 0
  R87: <gurobi.LinExpr: lambdas(1, 3)[34] + -1.0 z(1, 3)[34] + -1.0 z(1, 3)[35]> <= 0
  R88: <gurobi.LinExpr: lambdas(1, 3)[35] + -1.0 z(1, 3)[35] + -1.0 z(1, 3)[36]> <= 0
  R89: <gurobi.LinExpr: lambdas(1, 3)[36] + -1.0 z(1, 3)[36] + -1.0 z(1, 3)[37]> <= 0
  R90: <gurobi.LinExpr: lambdas(1, 3)[37] + -1.0 z(1, 3)[37] + -1.0 z(1, 3)[38]> <= 0
  R91: <gurobi.LinExpr: lambdas(1, 3)[38] + -1.0 z(1, 3)[38] + -1.0 z(1, 3)[39]> <= 0
  R92: <gurobi.LinExpr: lambdas(1, 3)[39] + -1.0 z(1, 3)[39] + -1.0 z(1, 3)[40]> <= 0
  R93: <gurobi.LinExpr: lambdas(1, 3)[40] + -1.0 z(1, 3)[40] + -1.0 z(1, 3)[41]> <= 0
  R94: <gurobi.LinExpr: lambdas(1, 3)[41] + -1.0 z(1, 3)[41] + -1.0 z(1, 3)[42]> <= 0
  R95: <gurobi.LinExpr: lambdas(1, 3)[42] + -1.0 z(1, 3)[42] + -1.0 z(1, 3)[43]> <= 0
  R96: <gurobi.LinExpr: lambdas(1, 3)[43] + -1.0 z(1, 3)[43] + -1.0 z(1, 3)[44]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.99879298751753 lambdas(1, 3)[1] + 2.8559933214452666 lambdas(1, 3)[2] +
2.7131936553730034 lambdas(1, 3)[3] + 2.5703939893007397 lambdas(1, 3)[4] +
2.4275943232284765 lambdas(1, 3)[5] + 2.284794657156213 lambdas(1, 3)[6] +
2.14199499108395 lambdas(1, 3)[7] + 1.9991953250116865 lambdas(1, 3)[8] +
1.8563956589394233 lambdas(1, 3)[9] + 1.7135959928671598 lambdas(1, 3)[10] +
1.5707963267948966 lambdas(1, 3)[11] + 1.4279966607226333 lambdas(1, 3)[12] +
1.2851969946503699 lambdas(1, 3)[13] + 1.1423973285781066 lambdas(1, 3)[14] +
0.9995976625058431 lambdas(1, 3)[15] + 0.8567979964335799 lambdas(1, 3)[16] +
0.7139983303613167 lambdas(1, 3)[17] + 0.5711986642890534 lambdas(1, 3)[18] +
0.42839899821678973 lambdas(1, 3)[19] + 0.2855993321445265 lambdas(1, 3)[20] +
0.14279966607226324 lambdas(1, 3)[21] + -0.14279966607226324 lambdas(1, 3)[23] +
-0.2855993321445265 lambdas(1, 3)[24] + -0.42839899821679017 lambdas(1, 3)[25] +
-0.5711986642890534 lambdas(1, 3)[26] + -0.7139983303613167 lambdas(1, 3)[27] +
-0.8567979964335799 lambdas(1, 3)[28] + -0.9995976625058436 lambdas(1, 3)[29] +
-1.1423973285781068 lambdas(1, 3)[30] + -1.28519699465037 lambdas(1, 3)[31] +
-1.4279966607226333 lambdas(1, 3)[32] + -1.5707963267948966 lambdas(1, 3)[33] +
-1.7135959928671598 lambdas(1, 3)[34] + -1.856395658939423 lambdas(1, 3)[35] +
-1.9991953250116863 lambdas(1, 3)[36] + -2.1419949910839495 lambdas(1, 3)[37] +
-2.2847946571562137 lambdas(1, 3)[38] + -2.427594323228477 lambdas(1, 3)[39] +
-2.57039398930074 lambdas(1, 3)[40] + -2.7131936553730034 lambdas(1, 3)[41] +
-2.8559933214452666 lambdas(1, 3)[42] + -2.99879298751753 lambdas(1, 3)[43] +
 -3.141592653589793 lambdas(1, 3)[44] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7320162142266476
lambdas(1, 3)[1] + -0.7562556799754314 lambdas(1, 3)[2] + -0.772224951624553 lambdas(1,
3)[3] + -0.7795989408548127 lambdas(1, 3)[4] + -0.7782275345103116 lambdas(1, 3)[5] +
-0.7681386504694143 lambdas(1, 3)[6] + -0.7495376693172544 lambdas(1, 3)[7] +
-0.7228032533892899 lambdas(1, 3)[8] + -0.6884796382981246 lambdas(1, 3)[9] +
-0.6472655538658829 lambdas(1, 3)[10] + -0.6 lambdas(1, 3)[11] + -0.5476451670745833
lambdas(1, 3)[12] + -0.4912668485091239 lambdas(1, 3)[13] + -0.4320127442879693
lambdas(1, 3)[14] + -0.37108909709833604 lambdas(1, 3)[15] + -0.30973613670771477
lambdas(1, 3)[16] + -0.24920283246233085 lambdas(1, 3)[17] + -0.19072146787298605
lambdas(1, 3)[18] + -0.13548255487639008 lambdas(1, 3)[19] + -0.08461059844528324
lambdas(1, 3)[20] + -0.03914120490999479 lambdas(1, 3)[21] + 0.03201621422664774
lambdas(1, 3)[23] + 0.056255679975431516 lambdas(1, 3)[24] + 0.07222495162455306
lambdas(1, 3)[25] + 0.07959894085481278 lambdas(1, 3)[26] + 0.07822753451031172
lambdas(1, 3)[27] + 0.06813865046941436 lambdas(1, 3)[28] + 0.049537669317254396
lambdas(1, 3)[29] + 0.02280325338928979 lambdas(1, 3)[30] + -0.011520361701875259
lambdas(1, 3)[31] + -0.05273444613411704 lambdas(1, 3)[32] + -0.09999999999999998
lambdas(1, 3)[33] + -0.15235483292541652 lambdas(1, 3)[34] + -0.2087331514908759
lambdas(1, 3)[35] + -0.2679872557120305 lambdas(1, 3)[36] + -0.32891090290166364
lambdas(1, 3)[37] + -0.39026386329228535 lambdas(1, 3)[38] + -0.4507971675376692
lambdas(1, 3)[39] + -0.5092785321270141 lambdas(1, 3)[40] + -0.5645174451236099
lambdas(1, 3)[41] + -0.6153894015547166 lambdas(1, 3)[42] + -0.6608587950900051
 lambdas(1, 3)[43] + -0.7 lambdas(1, 3)[44] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R100: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14] + lambdas(2, 3)[15] +
lambdas(2, 3)[16] + lambdas(2, 3)[17] + lambdas(2, 3)[18] + lambdas(2, 3)[19] +
lambdas(2, 3)[20] + lambdas(2, 3)[21] + lambdas(2, 3)[22] + lambdas(2, 3)[23] +
lambdas(2, 3)[24] + lambdas(2, 3)[25] + lambdas(2, 3)[26] + lambdas(2, 3)[27] +
lambdas(2, 3)[28] + lambdas(2, 3)[29] + lambdas(2, 3)[30] + lambdas(2, 3)[31] +
lambdas(2, 3)[32] + lambdas(2, 3)[33] + lambdas(2, 3)[34] + lambdas(2, 3)[35] +
lambdas(2, 3)[36] + lambdas(2, 3)[37] + lambdas(2, 3)[38] + lambdas(2, 3)[39] +
lambdas(2, 3)[40] + lambdas(2, 3)[41] + lambdas(2, 3)[42] + lambdas(2, 3)[43] +
 lambdas(2, 3)[44]> = 1
R101: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
3)[12] + z(2, 3)[13] + z(2, 3)[14] + z(2, 3)[15] + z(2, 3)[16] + z(2, 3)[17] + z(2,
3)[18] + z(2, 3)[19] + z(2, 3)[20] + z(2, 3)[21] + z(2, 3)[22] + z(2, 3)[23] + z(2,
3)[24] + z(2, 3)[25] + z(2, 3)[26] + z(2, 3)[27] + z(2, 3)[28] + z(2, 3)[29] + z(2,
3)[30] + z(2, 3)[31] + z(2, 3)[32] + z(2, 3)[33] + z(2, 3)[34] + z(2, 3)[35] + z(2,
3)[36] + z(2, 3)[37] + z(2, 3)[38] + z(2, 3)[39] + z(2, 3)[40] + z(2, 3)[41] + z(2,
 3)[42] + z(2, 3)[43] + z(2, 3)[44]> = 1
  R102: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R103: <gurobi.LinExpr: lambdas(2, 3)[44] + -1.0 z(2, 3)[44]> <= 0
  R104: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R105: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R106: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R107: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R108: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R109: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R110: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R111: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R112: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R113: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R114: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R115: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R116: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
  R117: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14] + -1.0 z(2, 3)[15]> <= 0
  R118: <gurobi.LinExpr: lambdas(2, 3)[15] + -1.0 z(2, 3)[15] + -1.0 z(2, 3)[16]> <= 0
  R119: <gurobi.LinExpr: lambdas(2, 3)[16] + -1.0 z(2, 3)[16] + -1.0 z(2, 3)[17]> <= 0
  R120: <gurobi.LinExpr: lambdas(2, 3)[17] + -1.0 z(2, 3)[17] + -1.0 z(2, 3)[18]> <= 0
  R121: <gurobi.LinExpr: lambdas(2, 3)[18] + -1.0 z(2, 3)[18] + -1.0 z(2, 3)[19]> <= 0
  R122: <gurobi.LinExpr: lambdas(2, 3)[19] + -1.0 z(2, 3)[19] + -1.0 z(2, 3)[20]> <= 0
  R123: <gurobi.LinExpr: lambdas(2, 3)[20] + -1.0 z(2, 3)[20] + -1.0 z(2, 3)[21]> <= 0
  R124: <gurobi.LinExpr: lambdas(2, 3)[21] + -1.0 z(2, 3)[21] + -1.0 z(2, 3)[22]> <= 0
  R125: <gurobi.LinExpr: lambdas(2, 3)[22] + -1.0 z(2, 3)[22] + -1.0 z(2, 3)[23]> <= 0
  R126: <gurobi.LinExpr: lambdas(2, 3)[23] + -1.0 z(2, 3)[23] + -1.0 z(2, 3)[24]> <= 0
  R127: <gurobi.LinExpr: lambdas(2, 3)[24] + -1.0 z(2, 3)[24] + -1.0 z(2, 3)[25]> <= 0
  R128: <gurobi.LinExpr: lambdas(2, 3)[25] + -1.0 z(2, 3)[25] + -1.0 z(2, 3)[26]> <= 0
  R129: <gurobi.LinExpr: lambdas(2, 3)[26] + -1.0 z(2, 3)[26] + -1.0 z(2, 3)[27]> <= 0
  R130: <gurobi.LinExpr: lambdas(2, 3)[27] + -1.0 z(2, 3)[27] + -1.0 z(2, 3)[28]> <= 0
  R131: <gurobi.LinExpr: lambdas(2, 3)[28] + -1.0 z(2, 3)[28] + -1.0 z(2, 3)[29]> <= 0
  R132: <gurobi.LinExpr: lambdas(2, 3)[29] + -1.0 z(2, 3)[29] + -1.0 z(2, 3)[30]> <= 0
  R133: <gurobi.LinExpr: lambdas(2, 3)[30] + -1.0 z(2, 3)[30] + -1.0 z(2, 3)[31]> <= 0
  R134: <gurobi.LinExpr: lambdas(2, 3)[31] + -1.0 z(2, 3)[31] + -1.0 z(2, 3)[32]> <= 0
  R135: <gurobi.LinExpr: lambdas(2, 3)[32] + -1.0 z(2, 3)[32] + -1.0 z(2, 3)[33]> <= 0
  R136: <gurobi.LinExpr: lambdas(2, 3)[33] + -1.0 z(2, 3)[33] + -1.0 z(2, 3)[34]> <= 0
  R137: <gurobi.LinExpr: lambdas(2, 3)[34] + -1.0 z(2, 3)[34] + -1.0 z(2, 3)[35]> <= 0
  R138: <gurobi.LinExpr: lambdas(2, 3)[35] + -1.0 z(2, 3)[35] + -1.0 z(2, 3)[36]> <= 0
  R139: <gurobi.LinExpr: lambdas(2, 3)[36] + -1.0 z(2, 3)[36] + -1.0 z(2, 3)[37]> <= 0
  R140: <gurobi.LinExpr: lambdas(2, 3)[37] + -1.0 z(2, 3)[37] + -1.0 z(2, 3)[38]> <= 0
  R141: <gurobi.LinExpr: lambdas(2, 3)[38] + -1.0 z(2, 3)[38] + -1.0 z(2, 3)[39]> <= 0
  R142: <gurobi.LinExpr: lambdas(2, 3)[39] + -1.0 z(2, 3)[39] + -1.0 z(2, 3)[40]> <= 0
  R143: <gurobi.LinExpr: lambdas(2, 3)[40] + -1.0 z(2, 3)[40] + -1.0 z(2, 3)[41]> <= 0
  R144: <gurobi.LinExpr: lambdas(2, 3)[41] + -1.0 z(2, 3)[41] + -1.0 z(2, 3)[42]> <= 0
  R145: <gurobi.LinExpr: lambdas(2, 3)[42] + -1.0 z(2, 3)[42] + -1.0 z(2, 3)[43]> <= 0
  R146: <gurobi.LinExpr: lambdas(2, 3)[43] + -1.0 z(2, 3)[43] + -1.0 z(2, 3)[44]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.99879298751753 lambdas(2, 3)[1] + 2.8559933214452666 lambdas(2, 3)[2] +
2.7131936553730034 lambdas(2, 3)[3] + 2.5703939893007397 lambdas(2, 3)[4] +
2.4275943232284765 lambdas(2, 3)[5] + 2.284794657156213 lambdas(2, 3)[6] +
2.14199499108395 lambdas(2, 3)[7] + 1.9991953250116865 lambdas(2, 3)[8] +
1.8563956589394233 lambdas(2, 3)[9] + 1.7135959928671598 lambdas(2, 3)[10] +
1.5707963267948966 lambdas(2, 3)[11] + 1.4279966607226333 lambdas(2, 3)[12] +
1.2851969946503699 lambdas(2, 3)[13] + 1.1423973285781066 lambdas(2, 3)[14] +
0.9995976625058431 lambdas(2, 3)[15] + 0.8567979964335799 lambdas(2, 3)[16] +
0.7139983303613167 lambdas(2, 3)[17] + 0.5711986642890534 lambdas(2, 3)[18] +
0.42839899821678973 lambdas(2, 3)[19] + 0.2855993321445265 lambdas(2, 3)[20] +
0.14279966607226324 lambdas(2, 3)[21] + -0.14279966607226324 lambdas(2, 3)[23] +
-0.2855993321445265 lambdas(2, 3)[24] + -0.42839899821679017 lambdas(2, 3)[25] +
-0.5711986642890534 lambdas(2, 3)[26] + -0.7139983303613167 lambdas(2, 3)[27] +
-0.8567979964335799 lambdas(2, 3)[28] + -0.9995976625058436 lambdas(2, 3)[29] +
-1.1423973285781068 lambdas(2, 3)[30] + -1.28519699465037 lambdas(2, 3)[31] +
-1.4279966607226333 lambdas(2, 3)[32] + -1.5707963267948966 lambdas(2, 3)[33] +
-1.7135959928671598 lambdas(2, 3)[34] + -1.856395658939423 lambdas(2, 3)[35] +
-1.9991953250116863 lambdas(2, 3)[36] + -2.1419949910839495 lambdas(2, 3)[37] +
-2.2847946571562137 lambdas(2, 3)[38] + -2.427594323228477 lambdas(2, 3)[39] +
-2.57039398930074 lambdas(2, 3)[40] + -2.7131936553730034 lambdas(2, 3)[41] +
-2.8559933214452666 lambdas(2, 3)[42] + -2.99879298751753 lambdas(2, 3)[43] +
 -3.141592653589793 lambdas(2, 3)[44] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7249004723129835
lambdas(2, 3)[1] + -0.7421690521333599 lambdas(2, 3)[2] + -0.7514542009744587 lambdas(2,
3)[3] + -0.7525668999820329 lambdas(2, 3)[4] + -0.7454844978130474 lambdas(2, 3)[5] +
-0.7303511717517014 lambdas(2, 3)[6] + -0.7074749926756954 lambdas(2, 3)[7] +
-0.6773216536215638 lambdas(2, 3)[8] + -0.6405049896173999 lambdas(2, 3)[9] +
-0.5977744817718362 lambdas(2, 3)[10] + -0.5499999999999999 lambdas(2, 3)[11] +
-0.49815409498053675 lambdas(2, 3)[12] + -0.44329219982839907 lambdas(2, 3)[13] +
-0.3865311445202434 lambdas(2, 3)[14] + -0.329026420456777 lambdas(2, 3)[15] +
-0.2719486579900019 lambdas(2, 3)[16] + -0.2164597957650666 lambdas(2, 3)[17] +
-0.16368942700020617 lambdas(2, 3)[18] + -0.11471180422629579 lambdas(2, 3)[19] +
-0.07052397060321175 lambdas(2, 3)[20] + -0.03202546299633052 lambdas(2, 3)[21] +
0.02490047231298348 lambdas(2, 3)[23] + 0.04216905213336003 lambdas(2, 3)[24] +
0.05145420097445874 lambdas(2, 3)[25] + 0.0525668999820329 lambdas(2, 3)[26] +
0.04548449781304742 lambdas(2, 3)[27] + 0.030351171751701433 lambdas(2, 3)[28] +
0.007474992675695347 lambdas(2, 3)[29] + -0.02267834637843613 lambdas(2, 3)[30] +
-0.05949501038260013 lambdas(2, 3)[31] + -0.10222551822816364 lambdas(2, 3)[32] +
-0.14999999999999994 lambdas(2, 3)[33] + -0.20184590501946315 lambdas(2, 3)[34] +
-0.2567078001716008 lambdas(2, 3)[35] + -0.31346885547975645 lambdas(2, 3)[36] +
-0.3709735795432227 lambdas(2, 3)[37] + -0.4280513420099982 lambdas(2, 3)[38] +
-0.4835402042349335 lambdas(2, 3)[39] + -0.5363105729997939 lambdas(2, 3)[40] +
-0.5852881957737042 lambdas(2, 3)[41] + -0.629476029396788 lambdas(2, 3)[42] +
 -0.6679745370036694 lambdas(2, 3)[43] + -0.7 lambdas(2, 3)[44] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R150: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R151: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R152: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R153: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R154: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R155: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 2)[15]', 'z(1, 2)[16]', 'z(1, 2)[17]', 'z(1,
2)[18]', 'z(1, 2)[19]', 'z(1, 2)[20]', 'z(1, 2)[21]', 'z(1, 2)[22]', 'z(1, 2)[23]',
'z(1, 2)[24]', 'z(1, 2)[25]', 'z(1, 2)[26]', 'z(1, 2)[27]', 'z(1, 2)[28]', 'z(1,
2)[29]', 'z(1, 2)[30]', 'z(1, 2)[31]', 'z(1, 2)[32]', 'z(1, 2)[33]', 'z(1, 2)[34]',
'z(1, 2)[35]', 'z(1, 2)[36]', 'z(1, 2)[37]', 'z(1, 2)[38]', 'z(1, 2)[39]', 'z(1,
2)[40]', 'z(1, 2)[41]', 'z(1, 2)[42]', 'z(1, 2)[43]', 'z(1, 2)[44]', 'z(1, 3)[1]', 'z(1,
3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]', 'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1,
3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]', 'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1,
3)[14]', 'z(1, 3)[15]', 'z(1, 3)[16]', 'z(1, 3)[17]', 'z(1, 3)[18]', 'z(1, 3)[19]',
'z(1, 3)[20]', 'z(1, 3)[21]', 'z(1, 3)[22]', 'z(1, 3)[23]', 'z(1, 3)[24]', 'z(1,
3)[25]', 'z(1, 3)[26]', 'z(1, 3)[27]', 'z(1, 3)[28]', 'z(1, 3)[29]', 'z(1, 3)[30]',
'z(1, 3)[31]', 'z(1, 3)[32]', 'z(1, 3)[33]', 'z(1, 3)[34]', 'z(1, 3)[35]', 'z(1,
3)[36]', 'z(1, 3)[37]', 'z(1, 3)[38]', 'z(1, 3)[39]', 'z(1, 3)[40]', 'z(1, 3)[41]',
'z(1, 3)[42]', 'z(1, 3)[43]', 'z(1, 3)[44]', 'z(2, 3)[1]', 'z(2, 3)[2]', 'z(2, 3)[3]',
'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]', 'z(2, 3)[9]',
'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]', 'z(2,
3)[15]', 'z(2, 3)[16]', 'z(2, 3)[17]', 'z(2, 3)[18]', 'z(2, 3)[19]', 'z(2, 3)[20]',
'z(2, 3)[21]', 'z(2, 3)[22]', 'z(2, 3)[23]', 'z(2, 3)[24]', 'z(2, 3)[25]', 'z(2,
3)[26]', 'z(2, 3)[27]', 'z(2, 3)[28]', 'z(2, 3)[29]', 'z(2, 3)[30]', 'z(2, 3)[31]',
'z(2, 3)[32]', 'z(2, 3)[33]', 'z(2, 3)[34]', 'z(2, 3)[35]', 'z(2, 3)[36]', 'z(2,
3)[37]', 'z(2, 3)[38]', 'z(2, 3)[39]', 'z(2, 3)[40]', 'z(2, 3)[41]', 'z(2, 3)[42]',
 'z(2, 3)[43]', 'z(2, 3)[44]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 156 rows, 285 columns and 960 nonzeros
Model fingerprint: 0xaa7843d7
Model has 3 general constraints
Variable types: 153 continuous, 132 integer (132 binary)
Coefficient statistics:
  Matrix range     [5e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 12:27:32 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000001 lambdas(1, 2)[0] +
-0.670083920367764 lambdas(1, 2)[1] + -0.6668681815252668 lambdas(1, 2)[2] +
-0.5909896999887136 lambdas(1, 2)[3] + -0.4574771396149251 lambdas(1, 2)[4] +
-0.2927743004100268 lambdas(1, 2)[5] + -0.1295025996263126 lambdas(1, 2)[6] +
0.07008392036776412 lambdas(1, 2)[8] + 0.06686818152526697 lambdas(1, 2)[9] +
-0.00901030001128622 lambdas(1, 2)[10] + -0.14252286038507483 lambdas(1, 2)[11] +
-0.30722569958997314 lambdas(1, 2)[12] + -0.47049740037368726 lambdas(1, 2)[13] +
 -0.5999999999999999 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(1, 3)[0] + -0.7738100385452362
lambdas(1, 3)[1] + -0.7636793012675642 lambdas(1, 3)[2] + -0.6716143049301659 lambdas(1,
3)[3] + -0.5158496511607458 lambdas(1, 3)[4] + -0.3272364399664507 lambdas(1, 3)[5] +
-0.14313183101354282 lambdas(1, 3)[6] + 0.07381003854523621 lambdas(1, 3)[8] +
0.06367930126756421 lambdas(1, 3)[9] + -0.028385695069834016 lambdas(1, 3)[10] +
-0.18415034883925407 lambdas(1, 3)[11] + -0.3727635600335492 lambdas(1, 3)[12] +
 -0.556868168986457 lambdas(1, 3)[13] + -0.7 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.7 lambdas(2, 3)[0] + -0.7521158515893582
lambdas(2, 3)[1] + -0.7245877271441628 lambdas(2, 3)[2] + -0.6228679093210747 lambdas(2,
3)[3] + -0.46710325555165466 lambdas(2, 3)[4] + -0.2881448658430492 lambdas(2, 3)[5] +
-0.12143764405766494 lambdas(2, 3)[6] + 0.05211585158935833 lambdas(2, 3)[8] +
0.02458772714416274 lambdas(2, 3)[9] + -0.07713209067892518 lambdas(2, 3)[10] +
-0.23289674444834524 lambdas(2, 3)[11] + -0.4118551341569507 lambdas(2, 3)[12] +
 -0.578562355942335 lambdas(2, 3)[13] + -0.7 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x30c766dc
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [9e-03, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 12:28:21 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(2, 3)[0] +
-0.15331065820009632 lambdas(2, 3)[1] + -0.21318843955866168 lambdas(2, 3)[2] +
-0.23777381512483575 lambdas(2, 3)[3] + -0.22219734974789374 lambdas(2, 3)[4] +
-0.1695441534285503 lambdas(2, 3)[5] + -0.09024283744692696 lambdas(2, 3)[6] +
0.08331065820009631 lambdas(2, 3)[8] + 0.14318843955866165 lambdas(2, 3)[9] +
0.16777381512483575 lambdas(2, 3)[10] + 0.15219734974789373 lambdas(2, 3)[11] +
0.09954415342855033 lambdas(2, 3)[12] + 0.020242837446926974 lambdas(2, 3)[13] +
 -0.06999999999999998 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0xd58f77f0
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [2e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 12:29:56 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.05000000000000003 lambdas(2, 3)[0] +
-0.13430096952107212 lambdas(2, 3)[1] + -0.19695354154007433 lambdas(2, 3)[2] +
-0.22554860578527258 lambdas(2, 3)[3] + -0.21442255908745686 lambdas(2, 3)[4] +
-0.16577905144713764 lambdas(2, 3)[5] + -0.08925252612595116 lambdas(2, 3)[6] +
0.0843009695210721 lambdas(2, 3)[8] + 0.1469535415400743 lambdas(2, 3)[9] +
0.17554860578527262 lambdas(2, 3)[10] + 0.1644225590874569 lambdas(2, 3)[11] +
0.11577905144713768 lambdas(2, 3)[12] + 0.03925252612595117 lambdas(2, 3)[13] +
 -0.049999999999999975 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x4a13bf2c
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 12:31:43 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.05000000000000003 lambdas(2, 3)[0] +
-0.13430096952107212 lambdas(2, 3)[1] + -0.19695354154007433 lambdas(2, 3)[2] +
-0.22554860578527258 lambdas(2, 3)[3] + -0.21442255908745686 lambdas(2, 3)[4] +
-0.16577905144713764 lambdas(2, 3)[5] + -0.08925252612595116 lambdas(2, 3)[6] +
0.0843009695210721 lambdas(2, 3)[8] + 0.1469535415400743 lambdas(2, 3)[9] +
0.17554860578527262 lambdas(2, 3)[10] + 0.1644225590874569 lambdas(2, 3)[11] +
0.11577905144713768 lambdas(2, 3)[12] + 0.03925252612595117 lambdas(2, 3)[13] +
 -0.049999999999999975 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x4a13bf2c
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Thu Apr  7 13:50:50 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.05000000000000003 lambdas(2, 3)[0] +
-0.13430096952107212 lambdas(2, 3)[1] + -0.19695354154007433 lambdas(2, 3)[2] +
-0.22554860578527258 lambdas(2, 3)[3] + -0.21442255908745686 lambdas(2, 3)[4] +
-0.16577905144713764 lambdas(2, 3)[5] + -0.08925252612595116 lambdas(2, 3)[6] +
0.0843009695210721 lambdas(2, 3)[8] + 0.1469535415400743 lambdas(2, 3)[9] +
0.17554860578527262 lambdas(2, 3)[10] + 0.1644225590874569 lambdas(2, 3)[11] +
0.11577905144713768 lambdas(2, 3)[12] + 0.03925252612595117 lambdas(2, 3)[13] +
 -0.049999999999999975 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x4a13bf2c
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.06 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 15:35:14 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.05000000000000003 lambdas(2, 3)[0] +
-0.13430096952107212 lambdas(2, 3)[1] + -0.19695354154007433 lambdas(2, 3)[2] +
-0.22554860578527258 lambdas(2, 3)[3] + -0.21442255908745686 lambdas(2, 3)[4] +
-0.16577905144713764 lambdas(2, 3)[5] + -0.08925252612595116 lambdas(2, 3)[6] +
0.0843009695210721 lambdas(2, 3)[8] + 0.1469535415400743 lambdas(2, 3)[9] +
0.17554860578527262 lambdas(2, 3)[10] + 0.1644225590874569 lambdas(2, 3)[11] +
0.11577905144713768 lambdas(2, 3)[12] + 0.03925252612595117 lambdas(2, 3)[13] +
 -0.049999999999999975 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x4a13bf2c
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.03 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 16:39:46 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.6000000000000003 lambdas(1, 2)[0] +
-1.56822326034111 lambdas(1, 2)[1] + -2.285259350234089 lambdas(1, 2)[2] +
-2.609090478205089 lambdas(1, 2)[3] + -2.4755779178313 lambdas(1, 2)[4] +
-1.9111654691188487 lambdas(1, 2)[5] + -1.027641939599658 lambdas(1, 2)[6] +
0.9682232603411094 lambdas(1, 2)[8] + 1.6852593502340887 lambdas(1, 2)[9] +
2.0090904782050893 lambdas(1, 2)[10] + 1.8755779178313003 lambdas(1, 2)[11] +
1.311165469118849 lambdas(1, 2)[12] + 0.4276419395996584 lambdas(1, 2)[13] +
 -0.5999999999999996 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.7000000000000004 lambdas(1, 3)[0] +
-1.7500484515597423 lambdas(1, 3)[1] + -2.5228001368206314 lambdas(1, 3)[2] +
-2.8652021073392695 lambdas(1, 3)[3] + -2.709437453569849 lambdas(1, 3)[4] +
-2.086357275519518 lambdas(1, 3)[5] + -1.1193702440280486 lambdas(1, 3)[6] +
1.050048451559742 lambdas(1, 3)[8] + 1.8228001368206312 lambdas(1, 3)[9] +
2.1652021073392693 lambdas(1, 3)[10] + 2.009437453569849 lambdas(1, 3)[11] +
1.386357275519518 lambdas(1, 3)[12] + 0.41937024402804896 lambdas(1, 3)[13] +
 -0.6999999999999997 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.5000000000000002 lambdas(2, 3)[0] +
-1.3430096952107213 lambdas(2, 3)[1] + -1.9695354154007432 lambdas(2, 3)[2] +
-2.2554860578527256 lambdas(2, 3)[3] + -2.1442255908745684 lambdas(2, 3)[4] +
-1.6577905144713763 lambdas(2, 3)[5] + -0.8925252612595115 lambdas(2, 3)[6] +
0.8430096952107211 lambdas(2, 3)[8] + 1.469535415400743 lambdas(2, 3)[9] +
1.755486057852726 lambdas(2, 3)[10] + 1.6442255908745687 lambdas(2, 3)[11] +
1.1577905144713765 lambdas(2, 3)[12] + 0.3925252612595117 lambdas(2, 3)[13] +
 -0.4999999999999998 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0xd1c73e3b
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-01, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 16:40:37 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -6.000000000000003 lambdas(1, 2)[0] +
-15.682232603411096 lambdas(1, 2)[1] + -22.85259350234089 lambdas(1, 2)[2] +
-26.090904782050885 lambdas(1, 2)[3] + -24.755779178313 lambdas(1, 2)[4] +
-19.111654691188484 lambdas(1, 2)[5] + -10.27641939599658 lambdas(1, 2)[6] +
9.682232603411094 lambdas(1, 2)[8] + 16.852593502340888 lambdas(1, 2)[9] +
20.090904782050885 lambdas(1, 2)[10] + 18.755779178313 lambdas(1, 2)[11] +
13.111654691188487 lambdas(1, 2)[12] + 4.276419395996582 lambdas(1, 2)[13] +
 -5.999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -7.0000000000000036 lambdas(1, 3)[0] +
-17.500484515597424 lambdas(1, 3)[1] + -25.228001368206314 lambdas(1, 3)[2] +
-28.652021073392692 lambdas(1, 3)[3] + -27.09437453569849 lambdas(1, 3)[4] +
-20.86357275519518 lambdas(1, 3)[5] + -11.193702440280486 lambdas(1, 3)[6] +
10.500484515597421 lambdas(1, 3)[8] + 18.228001368206314 lambdas(1, 3)[9] +
21.652021073392692 lambdas(1, 3)[10] + 20.09437453569849 lambdas(1, 3)[11] +
13.863572755195179 lambdas(1, 3)[12] + 4.193702440280488 lambdas(1, 3)[13] +
 -6.999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -5.000000000000003 lambdas(2, 3)[0] +
-13.430096952107213 lambdas(2, 3)[1] + -19.695354154007433 lambdas(2, 3)[2] +
-22.55486057852726 lambdas(2, 3)[3] + -21.442255908745686 lambdas(2, 3)[4] +
-16.57790514471376 lambdas(2, 3)[5] + -8.925252612595115 lambdas(2, 3)[6] +
8.430096952107212 lambdas(2, 3)[8] + 14.695354154007429 lambdas(2, 3)[9] +
17.55486057852726 lambdas(2, 3)[10] + 16.442255908745686 lambdas(2, 3)[11] +
11.577905144713764 lambdas(2, 3)[12] + 3.9252526125951173 lambdas(2, 3)[13] +
 -4.999999999999997 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x32453d3e
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-01, 3e+01]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 16:41:02 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -600000.0000000002 lambdas(1, 2)[0] +
-1568223.2603411097 lambdas(1, 2)[1] + -2285259.3502340885 lambdas(1, 2)[2] +
-2609090.4782050885 lambdas(1, 2)[3] + -2475577.9178313 lambdas(1, 2)[4] +
-1911165.4691188484 lambdas(1, 2)[5] + -1027641.9395996579 lambdas(1, 2)[6] +
968223.2603411095 lambdas(1, 2)[8] + 1685259.3502340885 lambdas(1, 2)[9] +
2009090.4782050885 lambdas(1, 2)[10] + 1875577.9178312998 lambdas(1, 2)[11] +
1311165.4691188487 lambdas(1, 2)[12] + 427641.93959965813 lambdas(1, 2)[13] +
 -599999.9999999998 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -700000.0000000005 lambdas(1, 3)[0] +
-1750048.4515597422 lambdas(1, 3)[1] + -2522800.1368206316 lambdas(1, 3)[2] +
-2865202.1073392695 lambdas(1, 3)[3] + -2709437.453569849 lambdas(1, 3)[4] +
-2086357.2755195177 lambdas(1, 3)[5] + -1119370.2440280486 lambdas(1, 3)[6] +
1050048.451559742 lambdas(1, 3)[8] + 1822800.136820631 lambdas(1, 3)[9] +
2165202.1073392695 lambdas(1, 3)[10] + 2009437.453569849 lambdas(1, 3)[11] +
1386357.2755195182 lambdas(1, 3)[12] + 419370.24402804876 lambdas(1, 3)[13] +
 -699999.9999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -500000.00000000023 lambdas(2, 3)[0] +
-1343009.6952107213 lambdas(2, 3)[1] + -1969535.4154007433 lambdas(2, 3)[2] +
-2255486.057852726 lambdas(2, 3)[3] + -2144225.5908745686 lambdas(2, 3)[4] +
-1657790.5144713763 lambdas(2, 3)[5] + -892525.2612595115 lambdas(2, 3)[6] +
843009.6952107211 lambdas(2, 3)[8] + 1469535.415400743 lambdas(2, 3)[9] +
1755486.057852726 lambdas(2, 3)[10] + 1644225.5908745686 lambdas(2, 3)[11] +
1157790.5144713765 lambdas(2, 3)[12] + 392525.2612595117 lambdas(2, 3)[13] +
 -499999.99999999977 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0xc58ed580
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-01, 3e+06]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 16:41:54 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.05000000000000003 lambdas(2, 3)[0] +
-0.13430096952107212 lambdas(2, 3)[1] + -0.19695354154007433 lambdas(2, 3)[2] +
-0.22554860578527258 lambdas(2, 3)[3] + -0.21442255908745686 lambdas(2, 3)[4] +
-0.16577905144713764 lambdas(2, 3)[5] + -0.08925252612595116 lambdas(2, 3)[6] +
0.0843009695210721 lambdas(2, 3)[8] + 0.1469535415400743 lambdas(2, 3)[9] +
0.17554860578527262 lambdas(2, 3)[10] + 0.1644225590874569 lambdas(2, 3)[11] +
0.11577905144713768 lambdas(2, 3)[12] + 0.03925252612595117 lambdas(2, 3)[13] +
 -0.049999999999999975 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x4a13bf2c
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 16:52:42 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] + z(1, 2)[5] +
z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1, 2)[11] + z(1,
 2)[12] + z(1, 2)[13] + z(1, 2)[14]> = 1
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[1]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
  R4: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1] + -1.0 z(1, 2)[2]> <= 0
  R5: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2] + -1.0 z(1, 2)[3]> <= 0
  R6: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3] + -1.0 z(1, 2)[4]> <= 0
  R7: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4] + -1.0 z(1, 2)[5]> <= 0
  R8: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5] + -1.0 z(1, 2)[6]> <= 0
  R9: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6] + -1.0 z(1, 2)[7]> <= 0
  R10: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7] + -1.0 z(1, 2)[8]> <= 0
  R11: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8] + -1.0 z(1, 2)[9]> <= 0
  R12: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9] + -1.0 z(1, 2)[10]> <= 0
  R13: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10] + -1.0 z(1, 2)[11]> <= 0
  R14: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11] + -1.0 z(1, 2)[12]> <= 0
  R15: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12] + -1.0 z(1, 2)[13]> <= 0
  R16: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -0.060000000000000026 lambdas(1, 2)[0] +
-0.15682232603411098 lambdas(1, 2)[1] + -0.2285259350234089 lambdas(1, 2)[2] +
-0.26090904782050883 lambdas(1, 2)[3] + -0.24755779178313 lambdas(1, 2)[4] +
-0.19111654691188487 lambdas(1, 2)[5] + -0.1027641939599658 lambdas(1, 2)[6] +
0.09682232603411095 lambdas(1, 2)[8] + 0.16852593502340887 lambdas(1, 2)[9] +
0.20090904782050886 lambdas(1, 2)[10] + 0.18755779178313 lambdas(1, 2)[11] +
0.1311165469118849 lambdas(1, 2)[12] + 0.04276419395996582 lambdas(1, 2)[13] +
 -0.05999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R20: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R21: <gurobi.LinExpr: z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] + z(1, 3)[5] +
z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1, 3)[11] + z(1,
 3)[12] + z(1, 3)[13] + z(1, 3)[14]> = 1
  R22: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[1]> <= 0
  R23: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
  R24: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1] + -1.0 z(1, 3)[2]> <= 0
  R25: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2] + -1.0 z(1, 3)[3]> <= 0
  R26: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3] + -1.0 z(1, 3)[4]> <= 0
  R27: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4] + -1.0 z(1, 3)[5]> <= 0
  R28: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5] + -1.0 z(1, 3)[6]> <= 0
  R29: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6] + -1.0 z(1, 3)[7]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7] + -1.0 z(1, 3)[8]> <= 0
  R31: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8] + -1.0 z(1, 3)[9]> <= 0
  R32: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9] + -1.0 z(1, 3)[10]> <= 0
  R33: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10] + -1.0 z(1, 3)[11]> <= 0
  R34: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11] + -1.0 z(1, 3)[12]> <= 0
  R35: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12] + -1.0 z(1, 3)[13]> <= 0
  R36: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -0.07000000000000003 lambdas(1, 3)[0] +
-0.17500484515597423 lambdas(1, 3)[1] + -0.25228001368206315 lambdas(1, 3)[2] +
-0.28652021073392686 lambdas(1, 3)[3] + -0.2709437453569849 lambdas(1, 3)[4] +
-0.20863572755195178 lambdas(1, 3)[5] + -0.11193702440280487 lambdas(1, 3)[6] +
0.10500484515597419 lambdas(1, 3)[8] + 0.18228001368206312 lambdas(1, 3)[9] +
0.21652021073392688 lambdas(1, 3)[10] + 0.2009437453569849 lambdas(1, 3)[11] +
0.1386357275519518 lambdas(1, 3)[12] + 0.04193702440280489 lambdas(1, 3)[13] +
 -0.06999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R40: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R41: <gurobi.LinExpr: z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] + z(2, 3)[5] +
z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2, 3)[11] + z(2,
 3)[12] + z(2, 3)[13] + z(2, 3)[14]> = 1
  R42: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[1]> <= 0
  R43: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
  R44: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1] + -1.0 z(2, 3)[2]> <= 0
  R45: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2] + -1.0 z(2, 3)[3]> <= 0
  R46: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3] + -1.0 z(2, 3)[4]> <= 0
  R47: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4] + -1.0 z(2, 3)[5]> <= 0
  R48: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5] + -1.0 z(2, 3)[6]> <= 0
  R49: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6] + -1.0 z(2, 3)[7]> <= 0
  R50: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7] + -1.0 z(2, 3)[8]> <= 0
  R51: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8] + -1.0 z(2, 3)[9]> <= 0
  R52: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9] + -1.0 z(2, 3)[10]> <= 0
  R53: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10] + -1.0 z(2, 3)[11]> <= 0
  R54: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11] + -1.0 z(2, 3)[12]> <= 0
  R55: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12] + -1.0 z(2, 3)[13]> <= 0
  R56: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -0.05000000000000003 lambdas(2, 3)[0] +
-0.13430096952107212 lambdas(2, 3)[1] + -0.19695354154007433 lambdas(2, 3)[2] +
-0.22554860578527258 lambdas(2, 3)[3] + -0.21442255908745686 lambdas(2, 3)[4] +
-0.16577905144713764 lambdas(2, 3)[5] + -0.08925252612595116 lambdas(2, 3)[6] +
0.0843009695210721 lambdas(2, 3)[8] + 0.1469535415400743 lambdas(2, 3)[9] +
0.17554860578527262 lambdas(2, 3)[10] + 0.1644225590874569 lambdas(2, 3)[11] +
0.11577905144713768 lambdas(2, 3)[12] + 0.03925252612595117 lambdas(2, 3)[13] +
 -0.049999999999999975 lambdas(2, 3)[14] + Pf(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R60: <gurobi.LinExpr: Pi[1] + -2.0 Pf(1, 2) + -1.0 Pf(1, 3)> = 0
  R61: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R62: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pf(2, 3)> = 0
  R63: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R64: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  R65: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]', 'z(1, 2)[6]',
'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]', 'z(1, 2)[12]',
'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[1]', 'z(1, 3)[2]', 'z(1, 3)[3]', 'z(1, 3)[4]',
'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]', 'z(1, 3)[9]', 'z(1, 3)[10]',
'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]', 'z(2, 3)[1]', 'z(2, 3)[2]',
'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]', 'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]',
 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]', 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 66 rows, 105 columns and 330 nonzeros
Model fingerprint: 0x4a13bf2c
Model has 3 general constraints
Variable types: 63 continuous, 42 integer (42 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 17:57:25 2022

Set parameter LogFile to value "sos2_log.txt"

Gurobi 9.5.1 (win64) logging started Fri Apr  8 17:57:36 2022

Set parameter LogFile to value "sos2_log.txt"

Gurobi 9.5.1 (win64) logging started Fri Apr  8 17:58:11 2022

Set parameter LogFile to value "sos2_log.txt"

Gurobi 9.5.1 (win64) logging started Fri Apr  8 17:59:12 2022

Set parameter LogFile to value "sos2_log.txt"

Gurobi 9.5.1 (win64) logging started Fri Apr  8 18:00:25 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[0] + z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] +
z(1, 2)[5] + z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1,
 2)[11] + z(1, 2)[12] + z(1, 2)[13] + z(1, 2)[14]> <= 2
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[0]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[2]> <= 1
  R4: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[3]> <= 1
  R5: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[4]> <= 1
  R6: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[5]> <= 1
  R7: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[6]> <= 1
  R8: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[7]> <= 1
  R9: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[8]> <= 1
  R10: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[9]> <= 1
  R11: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[10]> <= 1
  R12: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[11]> <= 1
  R13: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[12]> <= 1
  R14: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[13]> <= 1
  R15: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[14]> <= 1
  R16: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1]> <= 0
  R17: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[3]> <= 1
  R18: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[4]> <= 1
  R19: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[5]> <= 1
  R20: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[6]> <= 1
  R21: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[7]> <= 1
  R22: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[8]> <= 1
  R23: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[9]> <= 1
  R24: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[10]> <= 1
  R25: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[11]> <= 1
  R26: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[12]> <= 1
  R27: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[13]> <= 1
  R28: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[14]> <= 1
  R29: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[4]> <= 1
  R31: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[5]> <= 1
  R32: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[6]> <= 1
  R33: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[7]> <= 1
  R34: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[8]> <= 1
  R35: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[9]> <= 1
  R36: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[10]> <= 1
  R37: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[11]> <= 1
  R38: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[12]> <= 1
  R39: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[13]> <= 1
  R40: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[14]> <= 1
  R41: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3]> <= 0
  R42: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[5]> <= 1
  R43: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[6]> <= 1
  R44: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[7]> <= 1
  R45: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[8]> <= 1
  R46: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[9]> <= 1
  R47: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[10]> <= 1
  R48: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[11]> <= 1
  R49: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[12]> <= 1
  R50: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[13]> <= 1
  R51: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[14]> <= 1
  R52: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4]> <= 0
  R53: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[6]> <= 1
  R54: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[7]> <= 1
  R55: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[8]> <= 1
  R56: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[9]> <= 1
  R57: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[10]> <= 1
  R58: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[11]> <= 1
  R59: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[12]> <= 1
  R60: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[13]> <= 1
  R61: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[14]> <= 1
  R62: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5]> <= 0
  R63: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[7]> <= 1
  R64: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[8]> <= 1
  R65: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[9]> <= 1
  R66: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[10]> <= 1
  R67: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[11]> <= 1
  R68: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[12]> <= 1
  R69: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[13]> <= 1
  R70: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[14]> <= 1
  R71: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6]> <= 0
  R72: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[8]> <= 1
  R73: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[9]> <= 1
  R74: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[10]> <= 1
  R75: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[11]> <= 1
  R76: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[12]> <= 1
  R77: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[13]> <= 1
  R78: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[14]> <= 1
  R79: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7]> <= 0
  R80: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[9]> <= 1
  R81: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[10]> <= 1
  R82: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[11]> <= 1
  R83: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[12]> <= 1
  R84: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[13]> <= 1
  R85: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[14]> <= 1
  R86: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8]> <= 0
  R87: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[10]> <= 1
  R88: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[11]> <= 1
  R89: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[12]> <= 1
  R90: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[13]> <= 1
  R91: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[14]> <= 1
  R92: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9]> <= 0
  R93: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[11]> <= 1
  R94: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[12]> <= 1
  R95: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[13]> <= 1
  R96: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[14]> <= 1
  R97: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10]> <= 0
  R98: <gurobi.LinExpr: lambdas(1, 2)[10] + z(1, 2)[12]> <= 1
  R99: <gurobi.LinExpr: lambdas(1, 2)[10] + z(1, 2)[13]> <= 1
  R100: <gurobi.LinExpr: lambdas(1, 2)[10] + z(1, 2)[14]> <= 1
  R101: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11]> <= 0
  R102: <gurobi.LinExpr: lambdas(1, 2)[11] + z(1, 2)[13]> <= 1
  R103: <gurobi.LinExpr: lambdas(1, 2)[11] + z(1, 2)[14]> <= 1
  R104: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12]> <= 0
  R105: <gurobi.LinExpr: lambdas(1, 2)[12] + z(1, 2)[14]> <= 1
  R106: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13]> <= 0
  R107: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -6.000000000000003 lambdas(1, 2)[0] +
-15.682232603411098 lambdas(1, 2)[1] + -22.85259350234089 lambdas(1, 2)[2] +
-26.090904782050885 lambdas(1, 2)[3] + -24.755779178313002 lambdas(1, 2)[4] +
-19.111654691188487 lambdas(1, 2)[5] + -10.27641939599658 lambdas(1, 2)[6] +
9.682232603411094 lambdas(1, 2)[8] + 16.852593502340888 lambdas(1, 2)[9] +
20.090904782050885 lambdas(1, 2)[10] + 18.755779178313002 lambdas(1, 2)[11] +
13.111654691188491 lambdas(1, 2)[12] + 4.276419395996582 lambdas(1, 2)[13] +
 -5.999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
Pb(1, 2) calculation: <gurobi.LinExpr: -5.999999999999997 lambdas(1, 2)[0] +
4.276419395996582 lambdas(1, 2)[1] + 13.111654691188491 lambdas(1, 2)[2] +
18.755779178313002 lambdas(1, 2)[3] + 20.090904782050885 lambdas(1, 2)[4] +
16.852593502340888 lambdas(1, 2)[5] + 9.682232603411094 lambdas(1, 2)[6] +
-10.27641939599658 lambdas(1, 2)[8] + -19.111654691188487 lambdas(1, 2)[9] +
-24.755779178313002 lambdas(1, 2)[10] + -26.090904782050885 lambdas(1, 2)[11] +
-22.85259350234089 lambdas(1, 2)[12] + -15.682232603411098 lambdas(1, 2)[13] +
 -6.000000000000003 lambdas(1, 2)[14] + Pb(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R112: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R113: <gurobi.LinExpr: z(1, 3)[0] + z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] +
z(1, 3)[5] + z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1,
 3)[11] + z(1, 3)[12] + z(1, 3)[13] + z(1, 3)[14]> <= 2
  R114: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[0]> <= 0
  R115: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[2]> <= 1
  R116: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[3]> <= 1
  R117: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[4]> <= 1
  R118: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[5]> <= 1
  R119: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[6]> <= 1
  R120: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[7]> <= 1
  R121: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[8]> <= 1
  R122: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[9]> <= 1
  R123: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[10]> <= 1
  R124: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[11]> <= 1
  R125: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[12]> <= 1
  R126: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[13]> <= 1
  R127: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[14]> <= 1
  R128: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1]> <= 0
  R129: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[3]> <= 1
  R130: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[4]> <= 1
  R131: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[5]> <= 1
  R132: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[6]> <= 1
  R133: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[7]> <= 1
  R134: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[8]> <= 1
  R135: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[9]> <= 1
  R136: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[10]> <= 1
  R137: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[11]> <= 1
  R138: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[12]> <= 1
  R139: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[13]> <= 1
  R140: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[14]> <= 1
  R141: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2]> <= 0
  R142: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[4]> <= 1
  R143: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[5]> <= 1
  R144: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[6]> <= 1
  R145: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[7]> <= 1
  R146: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[8]> <= 1
  R147: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[9]> <= 1
  R148: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[10]> <= 1
  R149: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[11]> <= 1
  R150: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[12]> <= 1
  R151: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[13]> <= 1
  R152: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[14]> <= 1
  R153: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3]> <= 0
  R154: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[5]> <= 1
  R155: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[6]> <= 1
  R156: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[7]> <= 1
  R157: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[8]> <= 1
  R158: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[9]> <= 1
  R159: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[10]> <= 1
  R160: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[11]> <= 1
  R161: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[12]> <= 1
  R162: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[13]> <= 1
  R163: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[14]> <= 1
  R164: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4]> <= 0
  R165: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[6]> <= 1
  R166: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[7]> <= 1
  R167: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[8]> <= 1
  R168: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[9]> <= 1
  R169: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[10]> <= 1
  R170: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[11]> <= 1
  R171: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[12]> <= 1
  R172: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[13]> <= 1
  R173: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[14]> <= 1
  R174: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5]> <= 0
  R175: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[7]> <= 1
  R176: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[8]> <= 1
  R177: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[9]> <= 1
  R178: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[10]> <= 1
  R179: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[11]> <= 1
  R180: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[12]> <= 1
  R181: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[13]> <= 1
  R182: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[14]> <= 1
  R183: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6]> <= 0
  R184: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[8]> <= 1
  R185: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[9]> <= 1
  R186: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[10]> <= 1
  R187: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[11]> <= 1
  R188: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[12]> <= 1
  R189: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[13]> <= 1
  R190: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[14]> <= 1
  R191: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7]> <= 0
  R192: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[9]> <= 1
  R193: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[10]> <= 1
  R194: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[11]> <= 1
  R195: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[12]> <= 1
  R196: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[13]> <= 1
  R197: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[14]> <= 1
  R198: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8]> <= 0
  R199: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[10]> <= 1
  R200: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[11]> <= 1
  R201: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[12]> <= 1
  R202: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[13]> <= 1
  R203: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[14]> <= 1
  R204: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9]> <= 0
  R205: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[11]> <= 1
  R206: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[12]> <= 1
  R207: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[13]> <= 1
  R208: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[14]> <= 1
  R209: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10]> <= 0
  R210: <gurobi.LinExpr: lambdas(1, 3)[10] + z(1, 3)[12]> <= 1
  R211: <gurobi.LinExpr: lambdas(1, 3)[10] + z(1, 3)[13]> <= 1
  R212: <gurobi.LinExpr: lambdas(1, 3)[10] + z(1, 3)[14]> <= 1
  R213: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11]> <= 0
  R214: <gurobi.LinExpr: lambdas(1, 3)[11] + z(1, 3)[13]> <= 1
  R215: <gurobi.LinExpr: lambdas(1, 3)[11] + z(1, 3)[14]> <= 1
  R216: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12]> <= 0
  R217: <gurobi.LinExpr: lambdas(1, 3)[12] + z(1, 3)[14]> <= 1
  R218: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13]> <= 0
  R219: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -7.0000000000000036 lambdas(1, 3)[0] +
-17.50048451559742 lambdas(1, 3)[1] + -25.228001368206314 lambdas(1, 3)[2] +
-28.652021073392685 lambdas(1, 3)[3] + -27.09437453569849 lambdas(1, 3)[4] +
-20.86357275519518 lambdas(1, 3)[5] + -11.193702440280488 lambdas(1, 3)[6] +
10.50048451559742 lambdas(1, 3)[8] + 18.22800136820631 lambdas(1, 3)[9] +
21.65202107339269 lambdas(1, 3)[10] + 20.09437453569849 lambdas(1, 3)[11] +
13.86357275519518 lambdas(1, 3)[12] + 4.193702440280489 lambdas(1, 3)[13] +
 -6.999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
Pb(1, 3) calculation: <gurobi.LinExpr: -6.999999999999998 lambdas(1, 3)[0] +
4.193702440280489 lambdas(1, 3)[1] + 13.86357275519518 lambdas(1, 3)[2] +
20.09437453569849 lambdas(1, 3)[3] + 21.65202107339269 lambdas(1, 3)[4] +
18.22800136820631 lambdas(1, 3)[5] + 10.50048451559742 lambdas(1, 3)[6] +
-11.193702440280488 lambdas(1, 3)[8] + -20.86357275519518 lambdas(1, 3)[9] +
-27.09437453569849 lambdas(1, 3)[10] + -28.652021073392685 lambdas(1, 3)[11] +
-25.228001368206314 lambdas(1, 3)[12] + -17.50048451559742 lambdas(1, 3)[13] +
 -7.0000000000000036 lambdas(1, 3)[14] + Pb(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R224: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R225: <gurobi.LinExpr: z(2, 3)[0] + z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] +
z(2, 3)[5] + z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2,
 3)[11] + z(2, 3)[12] + z(2, 3)[13] + z(2, 3)[14]> <= 2
  R226: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[0]> <= 0
  R227: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[2]> <= 1
  R228: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[3]> <= 1
  R229: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[4]> <= 1
  R230: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[5]> <= 1
  R231: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[6]> <= 1
  R232: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[7]> <= 1
  R233: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[8]> <= 1
  R234: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[9]> <= 1
  R235: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[10]> <= 1
  R236: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[11]> <= 1
  R237: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[12]> <= 1
  R238: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[13]> <= 1
  R239: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[14]> <= 1
  R240: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1]> <= 0
  R241: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[3]> <= 1
  R242: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[4]> <= 1
  R243: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[5]> <= 1
  R244: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[6]> <= 1
  R245: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[7]> <= 1
  R246: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[8]> <= 1
  R247: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[9]> <= 1
  R248: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[10]> <= 1
  R249: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[11]> <= 1
  R250: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[12]> <= 1
  R251: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[13]> <= 1
  R252: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[14]> <= 1
  R253: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2]> <= 0
  R254: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[4]> <= 1
  R255: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[5]> <= 1
  R256: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[6]> <= 1
  R257: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[7]> <= 1
  R258: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[8]> <= 1
  R259: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[9]> <= 1
  R260: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[10]> <= 1
  R261: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[11]> <= 1
  R262: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[12]> <= 1
  R263: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[13]> <= 1
  R264: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[14]> <= 1
  R265: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3]> <= 0
  R266: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[5]> <= 1
  R267: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[6]> <= 1
  R268: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[7]> <= 1
  R269: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[8]> <= 1
  R270: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[9]> <= 1
  R271: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[10]> <= 1
  R272: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[11]> <= 1
  R273: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[12]> <= 1
  R274: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[13]> <= 1
  R275: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[14]> <= 1
  R276: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4]> <= 0
  R277: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[6]> <= 1
  R278: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[7]> <= 1
  R279: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[8]> <= 1
  R280: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[9]> <= 1
  R281: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[10]> <= 1
  R282: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[11]> <= 1
  R283: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[12]> <= 1
  R284: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[13]> <= 1
  R285: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[14]> <= 1
  R286: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5]> <= 0
  R287: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[7]> <= 1
  R288: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[8]> <= 1
  R289: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[9]> <= 1
  R290: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[10]> <= 1
  R291: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[11]> <= 1
  R292: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[12]> <= 1
  R293: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[13]> <= 1
  R294: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[14]> <= 1
  R295: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6]> <= 0
  R296: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[8]> <= 1
  R297: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[9]> <= 1
  R298: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[10]> <= 1
  R299: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[11]> <= 1
  R300: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[12]> <= 1
  R301: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[13]> <= 1
  R302: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[14]> <= 1
  R303: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7]> <= 0
  R304: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[9]> <= 1
  R305: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[10]> <= 1
  R306: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[11]> <= 1
  R307: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[12]> <= 1
  R308: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[13]> <= 1
  R309: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[14]> <= 1
  R310: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8]> <= 0
  R311: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[10]> <= 1
  R312: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[11]> <= 1
  R313: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[12]> <= 1
  R314: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[13]> <= 1
  R315: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[14]> <= 1
  R316: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9]> <= 0
  R317: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[11]> <= 1
  R318: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[12]> <= 1
  R319: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[13]> <= 1
  R320: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[14]> <= 1
  R321: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10]> <= 0
  R322: <gurobi.LinExpr: lambdas(2, 3)[10] + z(2, 3)[12]> <= 1
  R323: <gurobi.LinExpr: lambdas(2, 3)[10] + z(2, 3)[13]> <= 1
  R324: <gurobi.LinExpr: lambdas(2, 3)[10] + z(2, 3)[14]> <= 1
  R325: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11]> <= 0
  R326: <gurobi.LinExpr: lambdas(2, 3)[11] + z(2, 3)[13]> <= 1
  R327: <gurobi.LinExpr: lambdas(2, 3)[11] + z(2, 3)[14]> <= 1
  R328: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12]> <= 0
  R329: <gurobi.LinExpr: lambdas(2, 3)[12] + z(2, 3)[14]> <= 1
  R330: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13]> <= 0
  R331: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -5.000000000000003 lambdas(2, 3)[0] +
-13.430096952107212 lambdas(2, 3)[1] + -19.695354154007433 lambdas(2, 3)[2] +
-22.554860578527258 lambdas(2, 3)[3] + -21.442255908745686 lambdas(2, 3)[4] +
-16.577905144713764 lambdas(2, 3)[5] + -8.925252612595116 lambdas(2, 3)[6] +
8.43009695210721 lambdas(2, 3)[8] + 14.69535415400743 lambdas(2, 3)[9] +
17.55486057852726 lambdas(2, 3)[10] + 16.44225590874569 lambdas(2, 3)[11] +
11.577905144713768 lambdas(2, 3)[12] + 3.925252612595117 lambdas(2, 3)[13] +
 -4.999999999999997 lambdas(2, 3)[14] + Pf(2, 3)> = 0
Pb(2, 3) calculation: <gurobi.LinExpr: -4.999999999999997 lambdas(2, 3)[0] +
3.925252612595117 lambdas(2, 3)[1] + 11.577905144713768 lambdas(2, 3)[2] +
16.44225590874569 lambdas(2, 3)[3] + 17.55486057852726 lambdas(2, 3)[4] +
14.69535415400743 lambdas(2, 3)[5] + 8.43009695210721 lambdas(2, 3)[6] +
-8.925252612595116 lambdas(2, 3)[8] + -16.577905144713764 lambdas(2, 3)[9] +
-21.442255908745686 lambdas(2, 3)[10] + -22.554860578527258 lambdas(2, 3)[11] +
-19.695354154007433 lambdas(2, 3)[12] + -13.430096952107212 lambdas(2, 3)[13] +
 -5.000000000000003 lambdas(2, 3)[14] + Pb(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R336: <gurobi.LinExpr: Pi[1] + -2.0 Pb(1, 2) + -1.0 Pb(1, 3)> = 0
  Energy balance 1: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R338: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pb(2, 3)> = 0
  Energy balance 2: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R340: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  Energy balance 3: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[0]', 'z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]',
'z(1, 2)[6]', 'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]',
'z(1, 2)[12]', 'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[0]', 'z(1, 3)[1]', 'z(1, 3)[2]',
'z(1, 3)[3]', 'z(1, 3)[4]', 'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]',
'z(1, 3)[9]', 'z(1, 3)[10]', 'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]',
'z(2, 3)[0]', 'z(2, 3)[1]', 'z(2, 3)[2]', 'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]',
'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]', 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]',
 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']

Gurobi 9.5.1 (win64) logging started Fri Apr  8 18:00:48 2022

Set parameter LogFile to value "sos2_log.txt"
Minimize
  <gurobi.LinExpr: Pi_abs[1] + Pi_abs[2] + Pi_abs[3]>
Subject To
R0: <gurobi.LinExpr: lambdas(1, 2)[0] + lambdas(1, 2)[1] + lambdas(1, 2)[2] +
lambdas(1, 2)[3] + lambdas(1, 2)[4] + lambdas(1, 2)[5] + lambdas(1, 2)[6] + lambdas(1,
2)[7] + lambdas(1, 2)[8] + lambdas(1, 2)[9] + lambdas(1, 2)[10] + lambdas(1, 2)[11] +
 lambdas(1, 2)[12] + lambdas(1, 2)[13] + lambdas(1, 2)[14]> = 1
R1: <gurobi.LinExpr: z(1, 2)[0] + z(1, 2)[1] + z(1, 2)[2] + z(1, 2)[3] + z(1, 2)[4] +
z(1, 2)[5] + z(1, 2)[6] + z(1, 2)[7] + z(1, 2)[8] + z(1, 2)[9] + z(1, 2)[10] + z(1,
 2)[11] + z(1, 2)[12] + z(1, 2)[13] + z(1, 2)[14]> <= 2
  R2: <gurobi.LinExpr: lambdas(1, 2)[0] + -1.0 z(1, 2)[0]> <= 0
  R3: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[2]> <= 1
  R4: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[3]> <= 1
  R5: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[4]> <= 1
  R6: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[5]> <= 1
  R7: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[6]> <= 1
  R8: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[7]> <= 1
  R9: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[8]> <= 1
  R10: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[9]> <= 1
  R11: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[10]> <= 1
  R12: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[11]> <= 1
  R13: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[12]> <= 1
  R14: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[13]> <= 1
  R15: <gurobi.LinExpr: lambdas(1, 2)[0] + z(1, 2)[14]> <= 1
  R16: <gurobi.LinExpr: lambdas(1, 2)[1] + -1.0 z(1, 2)[1]> <= 0
  R17: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[3]> <= 1
  R18: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[4]> <= 1
  R19: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[5]> <= 1
  R20: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[6]> <= 1
  R21: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[7]> <= 1
  R22: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[8]> <= 1
  R23: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[9]> <= 1
  R24: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[10]> <= 1
  R25: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[11]> <= 1
  R26: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[12]> <= 1
  R27: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[13]> <= 1
  R28: <gurobi.LinExpr: lambdas(1, 2)[1] + z(1, 2)[14]> <= 1
  R29: <gurobi.LinExpr: lambdas(1, 2)[2] + -1.0 z(1, 2)[2]> <= 0
  R30: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[4]> <= 1
  R31: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[5]> <= 1
  R32: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[6]> <= 1
  R33: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[7]> <= 1
  R34: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[8]> <= 1
  R35: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[9]> <= 1
  R36: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[10]> <= 1
  R37: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[11]> <= 1
  R38: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[12]> <= 1
  R39: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[13]> <= 1
  R40: <gurobi.LinExpr: lambdas(1, 2)[2] + z(1, 2)[14]> <= 1
  R41: <gurobi.LinExpr: lambdas(1, 2)[3] + -1.0 z(1, 2)[3]> <= 0
  R42: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[5]> <= 1
  R43: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[6]> <= 1
  R44: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[7]> <= 1
  R45: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[8]> <= 1
  R46: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[9]> <= 1
  R47: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[10]> <= 1
  R48: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[11]> <= 1
  R49: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[12]> <= 1
  R50: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[13]> <= 1
  R51: <gurobi.LinExpr: lambdas(1, 2)[3] + z(1, 2)[14]> <= 1
  R52: <gurobi.LinExpr: lambdas(1, 2)[4] + -1.0 z(1, 2)[4]> <= 0
  R53: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[6]> <= 1
  R54: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[7]> <= 1
  R55: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[8]> <= 1
  R56: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[9]> <= 1
  R57: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[10]> <= 1
  R58: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[11]> <= 1
  R59: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[12]> <= 1
  R60: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[13]> <= 1
  R61: <gurobi.LinExpr: lambdas(1, 2)[4] + z(1, 2)[14]> <= 1
  R62: <gurobi.LinExpr: lambdas(1, 2)[5] + -1.0 z(1, 2)[5]> <= 0
  R63: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[7]> <= 1
  R64: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[8]> <= 1
  R65: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[9]> <= 1
  R66: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[10]> <= 1
  R67: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[11]> <= 1
  R68: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[12]> <= 1
  R69: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[13]> <= 1
  R70: <gurobi.LinExpr: lambdas(1, 2)[5] + z(1, 2)[14]> <= 1
  R71: <gurobi.LinExpr: lambdas(1, 2)[6] + -1.0 z(1, 2)[6]> <= 0
  R72: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[8]> <= 1
  R73: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[9]> <= 1
  R74: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[10]> <= 1
  R75: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[11]> <= 1
  R76: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[12]> <= 1
  R77: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[13]> <= 1
  R78: <gurobi.LinExpr: lambdas(1, 2)[6] + z(1, 2)[14]> <= 1
  R79: <gurobi.LinExpr: lambdas(1, 2)[7] + -1.0 z(1, 2)[7]> <= 0
  R80: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[9]> <= 1
  R81: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[10]> <= 1
  R82: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[11]> <= 1
  R83: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[12]> <= 1
  R84: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[13]> <= 1
  R85: <gurobi.LinExpr: lambdas(1, 2)[7] + z(1, 2)[14]> <= 1
  R86: <gurobi.LinExpr: lambdas(1, 2)[8] + -1.0 z(1, 2)[8]> <= 0
  R87: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[10]> <= 1
  R88: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[11]> <= 1
  R89: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[12]> <= 1
  R90: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[13]> <= 1
  R91: <gurobi.LinExpr: lambdas(1, 2)[8] + z(1, 2)[14]> <= 1
  R92: <gurobi.LinExpr: lambdas(1, 2)[9] + -1.0 z(1, 2)[9]> <= 0
  R93: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[11]> <= 1
  R94: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[12]> <= 1
  R95: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[13]> <= 1
  R96: <gurobi.LinExpr: lambdas(1, 2)[9] + z(1, 2)[14]> <= 1
  R97: <gurobi.LinExpr: lambdas(1, 2)[10] + -1.0 z(1, 2)[10]> <= 0
  R98: <gurobi.LinExpr: lambdas(1, 2)[10] + z(1, 2)[12]> <= 1
  R99: <gurobi.LinExpr: lambdas(1, 2)[10] + z(1, 2)[13]> <= 1
  R100: <gurobi.LinExpr: lambdas(1, 2)[10] + z(1, 2)[14]> <= 1
  R101: <gurobi.LinExpr: lambdas(1, 2)[11] + -1.0 z(1, 2)[11]> <= 0
  R102: <gurobi.LinExpr: lambdas(1, 2)[11] + z(1, 2)[13]> <= 1
  R103: <gurobi.LinExpr: lambdas(1, 2)[11] + z(1, 2)[14]> <= 1
  R104: <gurobi.LinExpr: lambdas(1, 2)[12] + -1.0 z(1, 2)[12]> <= 0
  R105: <gurobi.LinExpr: lambdas(1, 2)[12] + z(1, 2)[14]> <= 1
  R106: <gurobi.LinExpr: lambdas(1, 2)[13] + -1.0 z(1, 2)[13]> <= 0
  R107: <gurobi.LinExpr: lambdas(1, 2)[14] + -1.0 z(1, 2)[14]> <= 0
lag(1, 2) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 2)[0] +
2.6927937030769655 lambdas(1, 2)[1] + 2.243994752564138 lambdas(1, 2)[2] +
1.7951958020513104 lambdas(1, 2)[3] + 1.3463968515384828 lambdas(1, 2)[4] +
0.8975979010256552 lambdas(1, 2)[5] + 0.4487989505128276 lambdas(1, 2)[6] +
-0.4487989505128276 lambdas(1, 2)[8] + -0.8975979010256552 lambdas(1, 2)[9] +
-1.3463968515384828 lambdas(1, 2)[10] + -1.7951958020513104 lambdas(1, 2)[11] +
-2.243994752564138 lambdas(1, 2)[12] + -2.6927937030769655 lambdas(1, 2)[13] +
 -3.141592653589793 lambdas(1, 2)[14] + lag(1, 2)> = 0
Pf(1, 2) calculation: <gurobi.LinExpr: -6.000000000000003 lambdas(1, 2)[0] +
-15.682232603411098 lambdas(1, 2)[1] + -22.85259350234089 lambdas(1, 2)[2] +
-26.090904782050885 lambdas(1, 2)[3] + -24.755779178313002 lambdas(1, 2)[4] +
-19.111654691188487 lambdas(1, 2)[5] + -10.27641939599658 lambdas(1, 2)[6] +
9.682232603411094 lambdas(1, 2)[8] + 16.852593502340888 lambdas(1, 2)[9] +
20.090904782050885 lambdas(1, 2)[10] + 18.755779178313002 lambdas(1, 2)[11] +
13.111654691188491 lambdas(1, 2)[12] + 4.276419395996582 lambdas(1, 2)[13] +
 -5.999999999999997 lambdas(1, 2)[14] + Pf(1, 2)> = 0
Pb(1, 2) calculation: <gurobi.LinExpr: -5.999999999999997 lambdas(1, 2)[0] +
4.276419395996582 lambdas(1, 2)[1] + 13.111654691188491 lambdas(1, 2)[2] +
18.755779178313002 lambdas(1, 2)[3] + 20.090904782050885 lambdas(1, 2)[4] +
16.852593502340888 lambdas(1, 2)[5] + 9.682232603411094 lambdas(1, 2)[6] +
-10.27641939599658 lambdas(1, 2)[8] + -19.111654691188487 lambdas(1, 2)[9] +
-24.755779178313002 lambdas(1, 2)[10] + -26.090904782050885 lambdas(1, 2)[11] +
-22.85259350234089 lambdas(1, 2)[12] + -15.682232603411098 lambdas(1, 2)[13] +
 -6.000000000000003 lambdas(1, 2)[14] + Pb(1, 2)> = 0
  thetas_i=((1, 2)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[2] + lag(1, 2)> = 0
R112: <gurobi.LinExpr: lambdas(1, 3)[0] + lambdas(1, 3)[1] + lambdas(1, 3)[2] +
lambdas(1, 3)[3] + lambdas(1, 3)[4] + lambdas(1, 3)[5] + lambdas(1, 3)[6] + lambdas(1,
3)[7] + lambdas(1, 3)[8] + lambdas(1, 3)[9] + lambdas(1, 3)[10] + lambdas(1, 3)[11] +
 lambdas(1, 3)[12] + lambdas(1, 3)[13] + lambdas(1, 3)[14]> = 1
R113: <gurobi.LinExpr: z(1, 3)[0] + z(1, 3)[1] + z(1, 3)[2] + z(1, 3)[3] + z(1, 3)[4] +
z(1, 3)[5] + z(1, 3)[6] + z(1, 3)[7] + z(1, 3)[8] + z(1, 3)[9] + z(1, 3)[10] + z(1,
 3)[11] + z(1, 3)[12] + z(1, 3)[13] + z(1, 3)[14]> <= 2
  R114: <gurobi.LinExpr: lambdas(1, 3)[0] + -1.0 z(1, 3)[0]> <= 0
  R115: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[2]> <= 1
  R116: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[3]> <= 1
  R117: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[4]> <= 1
  R118: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[5]> <= 1
  R119: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[6]> <= 1
  R120: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[7]> <= 1
  R121: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[8]> <= 1
  R122: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[9]> <= 1
  R123: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[10]> <= 1
  R124: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[11]> <= 1
  R125: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[12]> <= 1
  R126: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[13]> <= 1
  R127: <gurobi.LinExpr: lambdas(1, 3)[0] + z(1, 3)[14]> <= 1
  R128: <gurobi.LinExpr: lambdas(1, 3)[1] + -1.0 z(1, 3)[1]> <= 0
  R129: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[3]> <= 1
  R130: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[4]> <= 1
  R131: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[5]> <= 1
  R132: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[6]> <= 1
  R133: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[7]> <= 1
  R134: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[8]> <= 1
  R135: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[9]> <= 1
  R136: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[10]> <= 1
  R137: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[11]> <= 1
  R138: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[12]> <= 1
  R139: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[13]> <= 1
  R140: <gurobi.LinExpr: lambdas(1, 3)[1] + z(1, 3)[14]> <= 1
  R141: <gurobi.LinExpr: lambdas(1, 3)[2] + -1.0 z(1, 3)[2]> <= 0
  R142: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[4]> <= 1
  R143: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[5]> <= 1
  R144: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[6]> <= 1
  R145: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[7]> <= 1
  R146: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[8]> <= 1
  R147: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[9]> <= 1
  R148: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[10]> <= 1
  R149: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[11]> <= 1
  R150: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[12]> <= 1
  R151: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[13]> <= 1
  R152: <gurobi.LinExpr: lambdas(1, 3)[2] + z(1, 3)[14]> <= 1
  R153: <gurobi.LinExpr: lambdas(1, 3)[3] + -1.0 z(1, 3)[3]> <= 0
  R154: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[5]> <= 1
  R155: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[6]> <= 1
  R156: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[7]> <= 1
  R157: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[8]> <= 1
  R158: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[9]> <= 1
  R159: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[10]> <= 1
  R160: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[11]> <= 1
  R161: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[12]> <= 1
  R162: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[13]> <= 1
  R163: <gurobi.LinExpr: lambdas(1, 3)[3] + z(1, 3)[14]> <= 1
  R164: <gurobi.LinExpr: lambdas(1, 3)[4] + -1.0 z(1, 3)[4]> <= 0
  R165: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[6]> <= 1
  R166: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[7]> <= 1
  R167: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[8]> <= 1
  R168: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[9]> <= 1
  R169: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[10]> <= 1
  R170: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[11]> <= 1
  R171: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[12]> <= 1
  R172: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[13]> <= 1
  R173: <gurobi.LinExpr: lambdas(1, 3)[4] + z(1, 3)[14]> <= 1
  R174: <gurobi.LinExpr: lambdas(1, 3)[5] + -1.0 z(1, 3)[5]> <= 0
  R175: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[7]> <= 1
  R176: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[8]> <= 1
  R177: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[9]> <= 1
  R178: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[10]> <= 1
  R179: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[11]> <= 1
  R180: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[12]> <= 1
  R181: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[13]> <= 1
  R182: <gurobi.LinExpr: lambdas(1, 3)[5] + z(1, 3)[14]> <= 1
  R183: <gurobi.LinExpr: lambdas(1, 3)[6] + -1.0 z(1, 3)[6]> <= 0
  R184: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[8]> <= 1
  R185: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[9]> <= 1
  R186: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[10]> <= 1
  R187: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[11]> <= 1
  R188: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[12]> <= 1
  R189: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[13]> <= 1
  R190: <gurobi.LinExpr: lambdas(1, 3)[6] + z(1, 3)[14]> <= 1
  R191: <gurobi.LinExpr: lambdas(1, 3)[7] + -1.0 z(1, 3)[7]> <= 0
  R192: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[9]> <= 1
  R193: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[10]> <= 1
  R194: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[11]> <= 1
  R195: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[12]> <= 1
  R196: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[13]> <= 1
  R197: <gurobi.LinExpr: lambdas(1, 3)[7] + z(1, 3)[14]> <= 1
  R198: <gurobi.LinExpr: lambdas(1, 3)[8] + -1.0 z(1, 3)[8]> <= 0
  R199: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[10]> <= 1
  R200: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[11]> <= 1
  R201: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[12]> <= 1
  R202: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[13]> <= 1
  R203: <gurobi.LinExpr: lambdas(1, 3)[8] + z(1, 3)[14]> <= 1
  R204: <gurobi.LinExpr: lambdas(1, 3)[9] + -1.0 z(1, 3)[9]> <= 0
  R205: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[11]> <= 1
  R206: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[12]> <= 1
  R207: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[13]> <= 1
  R208: <gurobi.LinExpr: lambdas(1, 3)[9] + z(1, 3)[14]> <= 1
  R209: <gurobi.LinExpr: lambdas(1, 3)[10] + -1.0 z(1, 3)[10]> <= 0
  R210: <gurobi.LinExpr: lambdas(1, 3)[10] + z(1, 3)[12]> <= 1
  R211: <gurobi.LinExpr: lambdas(1, 3)[10] + z(1, 3)[13]> <= 1
  R212: <gurobi.LinExpr: lambdas(1, 3)[10] + z(1, 3)[14]> <= 1
  R213: <gurobi.LinExpr: lambdas(1, 3)[11] + -1.0 z(1, 3)[11]> <= 0
  R214: <gurobi.LinExpr: lambdas(1, 3)[11] + z(1, 3)[13]> <= 1
  R215: <gurobi.LinExpr: lambdas(1, 3)[11] + z(1, 3)[14]> <= 1
  R216: <gurobi.LinExpr: lambdas(1, 3)[12] + -1.0 z(1, 3)[12]> <= 0
  R217: <gurobi.LinExpr: lambdas(1, 3)[12] + z(1, 3)[14]> <= 1
  R218: <gurobi.LinExpr: lambdas(1, 3)[13] + -1.0 z(1, 3)[13]> <= 0
  R219: <gurobi.LinExpr: lambdas(1, 3)[14] + -1.0 z(1, 3)[14]> <= 0
lag(1, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(1, 3)[0] +
2.6927937030769655 lambdas(1, 3)[1] + 2.243994752564138 lambdas(1, 3)[2] +
1.7951958020513104 lambdas(1, 3)[3] + 1.3463968515384828 lambdas(1, 3)[4] +
0.8975979010256552 lambdas(1, 3)[5] + 0.4487989505128276 lambdas(1, 3)[6] +
-0.4487989505128276 lambdas(1, 3)[8] + -0.8975979010256552 lambdas(1, 3)[9] +
-1.3463968515384828 lambdas(1, 3)[10] + -1.7951958020513104 lambdas(1, 3)[11] +
-2.243994752564138 lambdas(1, 3)[12] + -2.6927937030769655 lambdas(1, 3)[13] +
 -3.141592653589793 lambdas(1, 3)[14] + lag(1, 3)> = 0
Pf(1, 3) calculation: <gurobi.LinExpr: -7.0000000000000036 lambdas(1, 3)[0] +
-17.50048451559742 lambdas(1, 3)[1] + -25.228001368206314 lambdas(1, 3)[2] +
-28.652021073392685 lambdas(1, 3)[3] + -27.09437453569849 lambdas(1, 3)[4] +
-20.86357275519518 lambdas(1, 3)[5] + -11.193702440280488 lambdas(1, 3)[6] +
10.50048451559742 lambdas(1, 3)[8] + 18.22800136820631 lambdas(1, 3)[9] +
21.65202107339269 lambdas(1, 3)[10] + 20.09437453569849 lambdas(1, 3)[11] +
13.86357275519518 lambdas(1, 3)[12] + 4.193702440280489 lambdas(1, 3)[13] +
 -6.999999999999998 lambdas(1, 3)[14] + Pf(1, 3)> = 0
Pb(1, 3) calculation: <gurobi.LinExpr: -6.999999999999998 lambdas(1, 3)[0] +
4.193702440280489 lambdas(1, 3)[1] + 13.86357275519518 lambdas(1, 3)[2] +
20.09437453569849 lambdas(1, 3)[3] + 21.65202107339269 lambdas(1, 3)[4] +
18.22800136820631 lambdas(1, 3)[5] + 10.50048451559742 lambdas(1, 3)[6] +
-11.193702440280488 lambdas(1, 3)[8] + -20.86357275519518 lambdas(1, 3)[9] +
-27.09437453569849 lambdas(1, 3)[10] + -28.652021073392685 lambdas(1, 3)[11] +
-25.228001368206314 lambdas(1, 3)[12] + -17.50048451559742 lambdas(1, 3)[13] +
 -7.0000000000000036 lambdas(1, 3)[14] + Pb(1, 3)> = 0
  thetas_i=((1, 3)): <gurobi.LinExpr: -1.0 thetai[1] + thetai[3] + lag(1, 3)> = 0
R224: <gurobi.LinExpr: lambdas(2, 3)[0] + lambdas(2, 3)[1] + lambdas(2, 3)[2] +
lambdas(2, 3)[3] + lambdas(2, 3)[4] + lambdas(2, 3)[5] + lambdas(2, 3)[6] + lambdas(2,
3)[7] + lambdas(2, 3)[8] + lambdas(2, 3)[9] + lambdas(2, 3)[10] + lambdas(2, 3)[11] +
 lambdas(2, 3)[12] + lambdas(2, 3)[13] + lambdas(2, 3)[14]> = 1
R225: <gurobi.LinExpr: z(2, 3)[0] + z(2, 3)[1] + z(2, 3)[2] + z(2, 3)[3] + z(2, 3)[4] +
z(2, 3)[5] + z(2, 3)[6] + z(2, 3)[7] + z(2, 3)[8] + z(2, 3)[9] + z(2, 3)[10] + z(2,
 3)[11] + z(2, 3)[12] + z(2, 3)[13] + z(2, 3)[14]> <= 2
  R226: <gurobi.LinExpr: lambdas(2, 3)[0] + -1.0 z(2, 3)[0]> <= 0
  R227: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[2]> <= 1
  R228: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[3]> <= 1
  R229: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[4]> <= 1
  R230: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[5]> <= 1
  R231: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[6]> <= 1
  R232: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[7]> <= 1
  R233: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[8]> <= 1
  R234: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[9]> <= 1
  R235: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[10]> <= 1
  R236: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[11]> <= 1
  R237: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[12]> <= 1
  R238: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[13]> <= 1
  R239: <gurobi.LinExpr: lambdas(2, 3)[0] + z(2, 3)[14]> <= 1
  R240: <gurobi.LinExpr: lambdas(2, 3)[1] + -1.0 z(2, 3)[1]> <= 0
  R241: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[3]> <= 1
  R242: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[4]> <= 1
  R243: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[5]> <= 1
  R244: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[6]> <= 1
  R245: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[7]> <= 1
  R246: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[8]> <= 1
  R247: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[9]> <= 1
  R248: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[10]> <= 1
  R249: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[11]> <= 1
  R250: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[12]> <= 1
  R251: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[13]> <= 1
  R252: <gurobi.LinExpr: lambdas(2, 3)[1] + z(2, 3)[14]> <= 1
  R253: <gurobi.LinExpr: lambdas(2, 3)[2] + -1.0 z(2, 3)[2]> <= 0
  R254: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[4]> <= 1
  R255: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[5]> <= 1
  R256: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[6]> <= 1
  R257: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[7]> <= 1
  R258: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[8]> <= 1
  R259: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[9]> <= 1
  R260: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[10]> <= 1
  R261: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[11]> <= 1
  R262: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[12]> <= 1
  R263: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[13]> <= 1
  R264: <gurobi.LinExpr: lambdas(2, 3)[2] + z(2, 3)[14]> <= 1
  R265: <gurobi.LinExpr: lambdas(2, 3)[3] + -1.0 z(2, 3)[3]> <= 0
  R266: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[5]> <= 1
  R267: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[6]> <= 1
  R268: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[7]> <= 1
  R269: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[8]> <= 1
  R270: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[9]> <= 1
  R271: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[10]> <= 1
  R272: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[11]> <= 1
  R273: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[12]> <= 1
  R274: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[13]> <= 1
  R275: <gurobi.LinExpr: lambdas(2, 3)[3] + z(2, 3)[14]> <= 1
  R276: <gurobi.LinExpr: lambdas(2, 3)[4] + -1.0 z(2, 3)[4]> <= 0
  R277: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[6]> <= 1
  R278: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[7]> <= 1
  R279: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[8]> <= 1
  R280: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[9]> <= 1
  R281: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[10]> <= 1
  R282: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[11]> <= 1
  R283: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[12]> <= 1
  R284: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[13]> <= 1
  R285: <gurobi.LinExpr: lambdas(2, 3)[4] + z(2, 3)[14]> <= 1
  R286: <gurobi.LinExpr: lambdas(2, 3)[5] + -1.0 z(2, 3)[5]> <= 0
  R287: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[7]> <= 1
  R288: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[8]> <= 1
  R289: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[9]> <= 1
  R290: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[10]> <= 1
  R291: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[11]> <= 1
  R292: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[12]> <= 1
  R293: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[13]> <= 1
  R294: <gurobi.LinExpr: lambdas(2, 3)[5] + z(2, 3)[14]> <= 1
  R295: <gurobi.LinExpr: lambdas(2, 3)[6] + -1.0 z(2, 3)[6]> <= 0
  R296: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[8]> <= 1
  R297: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[9]> <= 1
  R298: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[10]> <= 1
  R299: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[11]> <= 1
  R300: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[12]> <= 1
  R301: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[13]> <= 1
  R302: <gurobi.LinExpr: lambdas(2, 3)[6] + z(2, 3)[14]> <= 1
  R303: <gurobi.LinExpr: lambdas(2, 3)[7] + -1.0 z(2, 3)[7]> <= 0
  R304: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[9]> <= 1
  R305: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[10]> <= 1
  R306: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[11]> <= 1
  R307: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[12]> <= 1
  R308: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[13]> <= 1
  R309: <gurobi.LinExpr: lambdas(2, 3)[7] + z(2, 3)[14]> <= 1
  R310: <gurobi.LinExpr: lambdas(2, 3)[8] + -1.0 z(2, 3)[8]> <= 0
  R311: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[10]> <= 1
  R312: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[11]> <= 1
  R313: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[12]> <= 1
  R314: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[13]> <= 1
  R315: <gurobi.LinExpr: lambdas(2, 3)[8] + z(2, 3)[14]> <= 1
  R316: <gurobi.LinExpr: lambdas(2, 3)[9] + -1.0 z(2, 3)[9]> <= 0
  R317: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[11]> <= 1
  R318: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[12]> <= 1
  R319: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[13]> <= 1
  R320: <gurobi.LinExpr: lambdas(2, 3)[9] + z(2, 3)[14]> <= 1
  R321: <gurobi.LinExpr: lambdas(2, 3)[10] + -1.0 z(2, 3)[10]> <= 0
  R322: <gurobi.LinExpr: lambdas(2, 3)[10] + z(2, 3)[12]> <= 1
  R323: <gurobi.LinExpr: lambdas(2, 3)[10] + z(2, 3)[13]> <= 1
  R324: <gurobi.LinExpr: lambdas(2, 3)[10] + z(2, 3)[14]> <= 1
  R325: <gurobi.LinExpr: lambdas(2, 3)[11] + -1.0 z(2, 3)[11]> <= 0
  R326: <gurobi.LinExpr: lambdas(2, 3)[11] + z(2, 3)[13]> <= 1
  R327: <gurobi.LinExpr: lambdas(2, 3)[11] + z(2, 3)[14]> <= 1
  R328: <gurobi.LinExpr: lambdas(2, 3)[12] + -1.0 z(2, 3)[12]> <= 0
  R329: <gurobi.LinExpr: lambdas(2, 3)[12] + z(2, 3)[14]> <= 1
  R330: <gurobi.LinExpr: lambdas(2, 3)[13] + -1.0 z(2, 3)[13]> <= 0
  R331: <gurobi.LinExpr: lambdas(2, 3)[14] + -1.0 z(2, 3)[14]> <= 0
lag(2, 3) calculation: <gurobi.LinExpr: 3.141592653589793 lambdas(2, 3)[0] +
2.6927937030769655 lambdas(2, 3)[1] + 2.243994752564138 lambdas(2, 3)[2] +
1.7951958020513104 lambdas(2, 3)[3] + 1.3463968515384828 lambdas(2, 3)[4] +
0.8975979010256552 lambdas(2, 3)[5] + 0.4487989505128276 lambdas(2, 3)[6] +
-0.4487989505128276 lambdas(2, 3)[8] + -0.8975979010256552 lambdas(2, 3)[9] +
-1.3463968515384828 lambdas(2, 3)[10] + -1.7951958020513104 lambdas(2, 3)[11] +
-2.243994752564138 lambdas(2, 3)[12] + -2.6927937030769655 lambdas(2, 3)[13] +
 -3.141592653589793 lambdas(2, 3)[14] + lag(2, 3)> = 0
Pf(2, 3) calculation: <gurobi.LinExpr: -5.000000000000003 lambdas(2, 3)[0] +
-13.430096952107212 lambdas(2, 3)[1] + -19.695354154007433 lambdas(2, 3)[2] +
-22.554860578527258 lambdas(2, 3)[3] + -21.442255908745686 lambdas(2, 3)[4] +
-16.577905144713764 lambdas(2, 3)[5] + -8.925252612595116 lambdas(2, 3)[6] +
8.43009695210721 lambdas(2, 3)[8] + 14.69535415400743 lambdas(2, 3)[9] +
17.55486057852726 lambdas(2, 3)[10] + 16.44225590874569 lambdas(2, 3)[11] +
11.577905144713768 lambdas(2, 3)[12] + 3.925252612595117 lambdas(2, 3)[13] +
 -4.999999999999997 lambdas(2, 3)[14] + Pf(2, 3)> = 0
Pb(2, 3) calculation: <gurobi.LinExpr: -4.999999999999997 lambdas(2, 3)[0] +
3.925252612595117 lambdas(2, 3)[1] + 11.577905144713768 lambdas(2, 3)[2] +
16.44225590874569 lambdas(2, 3)[3] + 17.55486057852726 lambdas(2, 3)[4] +
14.69535415400743 lambdas(2, 3)[5] + 8.43009695210721 lambdas(2, 3)[6] +
-8.925252612595116 lambdas(2, 3)[8] + -16.577905144713764 lambdas(2, 3)[9] +
-21.442255908745686 lambdas(2, 3)[10] + -22.554860578527258 lambdas(2, 3)[11] +
-19.695354154007433 lambdas(2, 3)[12] + -13.430096952107212 lambdas(2, 3)[13] +
 -5.000000000000003 lambdas(2, 3)[14] + Pb(2, 3)> = 0
  thetas_i=((2, 3)): <gurobi.LinExpr: -1.0 thetai[2] + thetai[3] + lag(2, 3)> = 0
  R336: <gurobi.LinExpr: Pi[1] + -2.0 Pb(1, 2) + -1.0 Pb(1, 3)> = 0
  Energy balance 1: <gurobi.LinExpr: Pgi[1] + -1.0 Pi[1]> = 1
  R338: <gurobi.LinExpr: Pi[2] + -2.0 Pf(1, 2) + -1.0 Pb(2, 3)> = 0
  Energy balance 2: <gurobi.LinExpr: Pgi[2] + -1.0 Pi[2]> = 3.5
  R340: <gurobi.LinExpr: Pi[3] + -1.0 Pf(1, 3) + -1.0 Pf(2, 3)> = 0
  Energy balance 3: <gurobi.LinExpr: Pgi[3] + -1.0 Pi[3]> = 5
Bounds
  -1.5708 <= thetai[1] <= 1.5708
  -1.5708 <= thetai[2] <= 1.5708
  -1.5708 <= thetai[3] <= 1.5708
  0 <= Pgi[1] <= 7
  Pgi[2] = 0
  0 <= Pgi[3] <= 4
Binaries
['z(1, 2)[0]', 'z(1, 2)[1]', 'z(1, 2)[2]', 'z(1, 2)[3]', 'z(1, 2)[4]', 'z(1, 2)[5]',
'z(1, 2)[6]', 'z(1, 2)[7]', 'z(1, 2)[8]', 'z(1, 2)[9]', 'z(1, 2)[10]', 'z(1, 2)[11]',
'z(1, 2)[12]', 'z(1, 2)[13]', 'z(1, 2)[14]', 'z(1, 3)[0]', 'z(1, 3)[1]', 'z(1, 3)[2]',
'z(1, 3)[3]', 'z(1, 3)[4]', 'z(1, 3)[5]', 'z(1, 3)[6]', 'z(1, 3)[7]', 'z(1, 3)[8]',
'z(1, 3)[9]', 'z(1, 3)[10]', 'z(1, 3)[11]', 'z(1, 3)[12]', 'z(1, 3)[13]', 'z(1, 3)[14]',
'z(2, 3)[0]', 'z(2, 3)[1]', 'z(2, 3)[2]', 'z(2, 3)[3]', 'z(2, 3)[4]', 'z(2, 3)[5]',
'z(2, 3)[6]', 'z(2, 3)[7]', 'z(2, 3)[8]', 'z(2, 3)[9]', 'z(2, 3)[10]', 'z(2, 3)[11]',
 'z(2, 3)[12]', 'z(2, 3)[13]', 'z(2, 3)[14]']
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 342 rows, 111 columns and 885 nonzeros
Model fingerprint: 0x75e9dc28
Model has 3 general constraints
Variable types: 66 continuous, 45 integer (45 binary)
Coefficient statistics:
  Matrix range     [4e-01, 3e+01]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 18:04:19 2022

Set parameter LogFile to value "sos2_log.txt"
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 342 rows, 111 columns and 885 nonzeros
Model fingerprint: 0x36dcab36
Model has 3 general constraints
Variable types: 66 continuous, 45 integer (45 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 18:09:32 2022

Set parameter LogFile to value "sos2_log.txt"
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 342 rows, 111 columns and 885 nonzeros
Model fingerprint: 0x36dcab36
Model has 3 general constraints
Variable types: 66 continuous, 45 integer (45 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 9.5.1 (win64) logging started Fri Apr  8 18:25:15 2022

Set parameter LogFile to value "sos2_log.txt"
Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 2 physical cores, 4 logical processors, using up to 4 threads
Optimize a model with 342 rows, 111 columns and 885 nonzeros
Model fingerprint: 0x36dcab36
Model has 3 general constraints
Variable types: 66 continuous, 45 integer (45 binary)
Coefficient statistics:
  Matrix range     [4e-02, 3e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [1e+00, 7e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 3 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds (0.00 work units)
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
